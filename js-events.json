{
  "abort event": [
    {
      "status": "standard",
      "type": "AbortSignal",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/abort_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/abort_event\">abort event</a>",
        "text": "abort event"
      },
      "description": {
        "html": "The <strong><code>abort</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> is fired when the associated request is aborted, i.e. using <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort\"><code>AbortController.abort()</code></a>.",
        "text": "The abort event of the AbortSignal is fired when the associated request is aborted, i.e. using AbortController.abort()."
      }
    },
    {
      "status": "standard",
      "type": "FileReader",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/FileReader/abort_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/abort_event\">abort event</a>",
        "text": "abort event"
      },
      "description": {
        "html": "The <code>abort</code> event is fired when a read has been aborted: for instance because the program called <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/abort\"><code>FileReader.abort()</code></a>.",
        "text": "The abort event is fired when a read has been aborted: for instance because the program called FileReader.abort()."
      }
    },
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/abort_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/abort_event\">abort event</a>",
        "text": "abort event"
      },
      "description": {
        "html": "The <strong><code>abort</code></strong> event is fired when the resource was not fully loaded, but not as the result of an error.",
        "text": "The abort event is fired when the resource was not fully loaded, but not as the result of an error."
      }
    },
    {
      "status": "standard",
      "type": "IDBDatabase",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/abort_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/abort_event\">abort event</a>",
        "text": "abort event"
      },
      "description": {
        "html": "The <code>abort</code> event is fired when an <code>IndexedDB</code> transaction is aborted.",
        "text": "The abort event is fired when an IndexedDB transaction is aborted."
      }
    },
    {
      "status": "standard",
      "type": "IDBTransaction",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/abort_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/abort_event\">abort event</a>",
        "text": "abort event"
      },
      "description": {
        "html": "The <code>abort</code> event is fired when an <code>IndexedDB</code> transaction is aborted.",
        "text": "The abort event is fired when an IndexedDB transaction is aborted."
      }
    },
    {
      "status": "standard",
      "type": "XMLHttpRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort_event\">abort event</a>",
        "text": "abort event"
      },
      "description": {
        "html": "The <code>abort</code> event is fired when a request has been aborted, for example because the program called <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort\"><code>XMLHttpRequest.abort()</code></a>.",
        "text": "The abort event is fired when a request has been aborted, for example because the program called XMLHttpRequest.abort()."
      }
    }
  ],
  "ended event": [
    {
      "status": "standard",
      "type": "AudioScheduledSourceNode",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode/ended_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode/ended_event\">ended event</a>",
        "text": "ended event"
      },
      "description": {
        "html": "The <code>ended</code> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a> interface is fired when the source node has stopped playing.",
        "text": "The ended event of the AudioScheduledSourceNode interface is fired when the source node has stopped playing."
      }
    },
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ended_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ended_event\">ended event</a>",
        "text": "ended event"
      },
      "description": {
        "html": "The <code>ended</code> event is fired when playback or streaming has stopped because the end of the media was reached or because no further data is available.",
        "text": "The ended event is fired when playback or streaming has stopped because the end of the media was reached or because no further data is available."
      }
    },
    {
      "status": "standard",
      "type": "MediaStreamTrack",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event\">ended event</a>",
        "text": "ended event"
      },
      "description": {
        "html": "The <strong><code>ended</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> interface is fired when playback or streaming has stopped because the end of the media was reached or because no further data is available.",
        "text": "The ended event of the MediaStreamTrack interface is fired when playback or streaming has stopped because the end of the media was reached or because no further data is available."
      }
    }
  ],
  "addtrack event": [
    {
      "status": "standard",
      "type": "AudioTrackList",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/addtrack_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/addtrack_event\">addtrack event</a>",
        "text": "addtrack event"
      },
      "description": {
        "html": "The <code>addtrack</code> event is fired when a track is added to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList\"><code>AudioTrackList</code></a>.",
        "text": "The addtrack event is fired when a track is added to an AudioTrackList."
      }
    },
    {
      "status": "standard",
      "type": "MediaStream",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/addtrack_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/addtrack_event\">addtrack event</a>",
        "text": "addtrack event"
      },
      "description": {
        "html": "The <code>addtrack</code> event is fired when a new <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> object has been added to a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a>.",
        "text": "The addtrack event is fired when a new MediaStreamTrack object has been added to a MediaStream."
      }
    },
    {
      "status": "standard",
      "type": "TextTrackList",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/addtrack_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/addtrack_event\">addtrack event</a>",
        "text": "addtrack event"
      },
      "description": {
        "html": "The <strong><code>addtrack</code></strong> event is fired when a track is added to a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList\"><code>TextTrackList</code></a>.",
        "text": "The addtrack event is fired when a track is added to a TextTrackList."
      }
    },
    {
      "status": "standard",
      "type": "VideoTrackList",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/addtrack_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/addtrack_event\">addtrack event</a>",
        "text": "addtrack event"
      },
      "description": {
        "html": "The <code>addtrack</code> event is fired when a video track is added to a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList\"><code>VideoTrackList</code></a>.",
        "text": "The addtrack event is fired when a video track is added to a VideoTrackList."
      }
    }
  ],
  "change event": [
    {
      "status": "standard",
      "type": "AudioTrackList",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/change_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/change_event\">change event</a>",
        "text": "change event"
      },
      "description": {
        "html": "The <code>change</code> event is fired when an audio track is enabled or disabled, for example by changing the track&apos;s <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/enabled\"><code>enabled</code></a> property.",
        "text": "The change event is fired when an audio track is enabled or disabled, for example by changing the track's enabled property."
      }
    },
    {
      "status": "standard",
      "type": "HTMLElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event\">change event</a>",
        "text": "change event"
      },
      "description": {
        "html": "The <code>change</code> event is fired for <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>, and <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> elements when the user modifies the element&apos;s value. Unlike the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event\" title=\"input\"><code>input</code></a> event, the <code>change</code> event is not necessarily fired for each alteration to an element&apos;s <code>value</code>.",
        "text": "The change event is fired for <input>, <select>, and <textarea> elements when the user modifies the element's value. Unlike the input event, the change event is not necessarily fired for each alteration to an element's value."
      }
    },
    {
      "status": "standard",
      "type": "TextTrackList",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/change_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/change_event\">change event</a>",
        "text": "change event"
      },
      "description": {
        "html": "The <strong><code>change</code></strong> event is fired when a text track is made active or inactive, or a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList\"><code>TextTrackList</code></a> is otherwise changed.",
        "text": "The change event is fired when a text track is made active or inactive, or a TextTrackList is otherwise changed."
      }
    },
    {
      "status": "standard",
      "type": "VideoTrackList",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/change_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/change_event\">change event</a>",
        "text": "change event"
      },
      "description": {
        "html": "The <code>change</code> event is fired when a video track is made active or inactive, for example by changing the track&apos;s <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/VideoTrack/selected\"><code>selected</code></a> property.",
        "text": "The change event is fired when a video track is made active or inactive, for example by changing the track's selected property."
      }
    }
  ],
  "removetrack event": [
    {
      "status": "standard",
      "type": "AudioTrackList",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/removetrack_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/removetrack_event\">removetrack event</a>",
        "text": "removetrack event"
      },
      "description": {
        "html": "The <code>removetrack</code> event is fired when a track is removed from an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList\"><code>AudioTrackList</code></a>.",
        "text": "The removetrack event is fired when a track is removed from an AudioTrackList."
      }
    },
    {
      "status": "standard",
      "type": "MediaStream",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/removetrack_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/removetrack_event\">removetrack event</a>",
        "text": "removetrack event"
      },
      "description": {
        "html": "The <code>removetrack</code> event is fired when a new <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> object has been removed from a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a>.",
        "text": "The removetrack event is fired when a new MediaStreamTrack object has been removed from a MediaStream."
      }
    },
    {
      "status": "standard",
      "type": "VideoTrackList",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/removetrack_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList/removetrack_event\">removetrack event</a>",
        "text": "removetrack event"
      },
      "description": {
        "html": "The <code>removetrack</code> event is fired when a video track is removed from a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/VideoTrackList\"><code>VideoTrackList</code></a>.",
        "text": "The removetrack event is fired when a video track is removed from a VideoTrackList."
      }
    }
  ],
  "messageerror event": [
    {
      "status": "standard",
      "type": "BroadcastChannel",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel/messageerror_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel/messageerror_event\">messageerror event</a>",
        "text": "messageerror event"
      },
      "description": {
        "html": "The <code>messageerror</code> event is fired on a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a> object when a message that can&apos;t be deserialized arrives on the channel.",
        "text": "The messageerror event is fired on a BroadcastChannel object when a message that can't be deserialized arrives on the channel."
      }
    },
    {
      "status": "standard",
      "type": "DedicatedWorkerGlobalScope",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope/messageerror_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope/messageerror_event\">messageerror event</a>",
        "text": "messageerror event"
      },
      "description": {
        "html": "The <code>messageerror</code> event is fired on a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a> object when it receives a message that can&apos;t be deserialized.",
        "text": "The messageerror event is fired on a DedicatedWorkerGlobalScope object when it receives a message that can't be deserialized."
      }
    },
    {
      "status": "standard",
      "type": "MessagePort",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/messageerror_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/messageerror_event\">messageerror event</a>",
        "text": "messageerror event"
      },
      "description": {
        "html": "The <code>messageerror</code> event is fired on a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MessagePort\"><code>MessagePort</code></a> object when it receives a message that can&apos;t be deserialized.",
        "text": "The messageerror event is fired on a MessagePort object when it receives a message that can't be deserialized."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/messageerror_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/messageerror_event\">messageerror event</a>",
        "text": "messageerror event"
      },
      "description": {
        "html": "The <code>messageerror</code> event is fired on a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>Window</code></a> object when it receives a message that can&apos;t be deserialized.",
        "text": "The messageerror event is fired on a Window object when it receives a message that can't be deserialized."
      }
    },
    {
      "status": "standard",
      "type": "Worker",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Worker/messageerror_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Worker/messageerror_event\">messageerror event</a>",
        "text": "messageerror event"
      },
      "description": {
        "html": "The <code>messageerror</code> event is fired on a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Worker\"><code>Worker</code></a> object when it receives a message that can&apos;t be deserialized.",
        "text": "The messageerror event is fired on a Worker object when it receives a message that can't be deserialized."
      }
    }
  ],
  "message event": [
    {
      "status": "standard",
      "type": "BroadcastChannel",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel/message_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel/message_event\">message event</a>",
        "text": "message event"
      },
      "description": {
        "html": "The <code>message</code> event is fired on a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a> object when a message arrives on that channel.",
        "text": "The message event is fired on a BroadcastChannel object when a message arrives on that channel."
      }
    },
    {
      "status": "standard",
      "type": "DedicatedWorkerGlobalScope",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope/message_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope/message_event\">message event</a>",
        "text": "message event"
      },
      "description": {
        "html": "The <code>message</code> event is fired on a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a> object when the worker receives a message from its parent (i.e. when the parent sends a message using <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\"><code>Worker.postMessage()</code></a>).",
        "text": "The message event is fired on a DedicatedWorkerGlobalScope object when the worker receives a message from its parent (i.e. when the parent sends a message using Worker.postMessage())."
      }
    },
    {
      "status": "standard",
      "type": "EventSource",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/EventSource/message_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventSource/message_event\">message event</a>",
        "text": "message event"
      },
      "description": {
        "html": "The <code>message</code> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventSource\"><code>EventSource</code></a> API is fired when data is received through an event source.",
        "text": "The message event of the EventSource API is fired when data is received through an event source."
      }
    },
    {
      "status": "standard",
      "type": "MessagePort",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/message_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/message_event\">message event</a>",
        "text": "message event"
      },
      "description": {
        "html": "The <code>message</code> event is fired on a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MessagePort\"><code>MessagePort</code></a> object when a message arrives on that channel.",
        "text": "The message event is fired on a MessagePort object when a message arrives on that channel."
      }
    },
    {
      "status": "standard",
      "type": "RTCDataChannel",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/message_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/message_event\">message event</a>",
        "text": "message event"
      },
      "description": {
        "html": "The WebRTC <strong><code>message</code></strong> event is sent to the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/message_event\" title=\"onmessage\" aria-current=\"page\"><code>onmessage</code></a> event handler on an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> object when a message has been received from the remote peer.",
        "text": "The WebRTC message event is sent to the onmessage event handler on an RTCDataChannel object when a message has been received from the remote peer."
      }
    },
    {
      "status": "standard",
      "type": "ServiceWorkerContainer",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/message_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/message_event\">message event</a>",
        "text": "message event"
      },
      "description": {
        "html": "The <strong><code>message</code></strong> event is used in a page controlled by a service worker to receive messages from the service worker.",
        "text": "The message event is used in a page controlled by a service worker to receive messages from the service worker."
      }
    },
    {
      "status": "standard",
      "type": "ServiceWorkerGlobalScope",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/message_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/message_event\">message event</a>",
        "text": "message event"
      },
      "description": {
        "html": "\n  The <strong><code>message</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface occurs when incoming messages are received. Controlled pages can use the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\" title=\"ServiceWorker.postMessage()\"><code>ServiceWorker.postMessage()</code></a> method to send messages to service workers.\n  The service worker can optionally send a response back via the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Client/postMessage\"><code>Client.postMessage()</code></a>, corresponding to the controlled page.\n",
        "text": "\n  The message event of the ServiceWorkerGlobalScope interface occurs when incoming messages are received. Controlled pages can use the ServiceWorker.postMessage() method to send messages to service workers.\n  The service worker can optionally send a response back via the Client.postMessage(), corresponding to the controlled page.\n"
      }
    },
    {
      "status": "standard",
      "type": "WebSocket",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/message_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/message_event\">message event</a>",
        "text": "message event"
      },
      "description": {
        "html": "The <code>message</code> event is fired when data is received through a <code>WebSocket</code>.",
        "text": "The message event is fired when data is received through a WebSocket."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/message_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/message_event\">message event</a>",
        "text": "message event"
      },
      "description": {
        "html": "The <code>message</code> event is fired on a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>Window</code></a> object when the window receives a message, for example from a call to <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\"><code>Window.postMessage()</code></a> from another browsing context.",
        "text": "The message event is fired on a Window object when the window receives a message, for example from a call to Window.postMessage() from another browsing context."
      }
    },
    {
      "status": "standard",
      "type": "Worker",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Worker/message_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Worker/message_event\">message event</a>",
        "text": "message event"
      },
      "description": {
        "html": "The <code>message</code> event is fired on a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Worker\"><code>Worker</code></a> object when the worker&apos;s parent receives a message from its worker (i.e. when the worker sends a message using <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope/postMessage\"><code>DedicatedWorkerGlobalScope.postMessage()</code></a>).",
        "text": "The message event is fired on a Worker object when the worker's parent receives a message from its worker (i.e. when the worker sends a message using DedicatedWorkerGlobalScope.postMessage())."
      }
    }
  ],
  "animationcancel event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/animationcancel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationcancel_event\">animationcancel event</a>",
        "text": "animationcancel event"
      },
      "description": {
        "html": "The <strong><code>animationcancel</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations\">CSS Animation</a> unexpectedly aborts. In other words, any time it stops running without sending an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event\" title=\"animationend\"><code>animationend</code></a> event. This might happen when the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-name\"><code>animation-name</code></a> is changed such that the animation is removed, or when the animating node is hidden using CSS. Therefore, either directly or because any of its containing nodes are hidden.",
        "text": "The animationcancel event is fired when a CSS Animation unexpectedly aborts. In other words, any time it stops running without sending an animationend event. This might happen when the animation-name is changed such that the animation is removed, or when the animating node is hidden using CSS. Therefore, either directly or because any of its containing nodes are hidden."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/animationcancel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationcancel_event\">animationcancel event</a>",
        "text": "animationcancel event"
      },
      "description": {
        "html": "The <strong><code>animationcancel</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations\">CSS Animation</a> unexpectedly aborts. In other words, any time it stops running without sending an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event\" title=\"animationend\"><code>animationend</code></a> event. This might happen when the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-name\"><code>animation-name</code></a> is changed such that the animation is removed, or when the animating node is hidden using CSS. Therefore, either directly or because any of its containing nodes are hidden.",
        "text": "The animationcancel event is fired when a CSS Animation unexpectedly aborts. In other words, any time it stops running without sending an animationend event. This might happen when the animation-name is changed such that the animation is removed, or when the animating node is hidden using CSS. Therefore, either directly or because any of its containing nodes are hidden."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/animationcancel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationcancel_event\">animationcancel event</a>",
        "text": "animationcancel event"
      },
      "description": {
        "html": "The <strong><code>animationcancel</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations\">CSS Animation</a> unexpectedly aborts. In other words, any time it stops running without sending an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event\" title=\"animationend\"><code>animationend</code></a> event. This might happen when the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-name\"><code>animation-name</code></a> is changed such that the animation is removed, or when the animating node is hidden using CSS. Therefore, either directly or because any of its containing nodes are hidden.",
        "text": "The animationcancel event is fired when a CSS Animation unexpectedly aborts. In other words, any time it stops running without sending an animationend event. This might happen when the animation-name is changed such that the animation is removed, or when the animating node is hidden using CSS. Therefore, either directly or because any of its containing nodes are hidden."
      }
    }
  ],
  "animationend event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event\">animationend event</a>",
        "text": "animationend event"
      },
      "description": {
        "html": "The <strong><code>animationend</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations\">CSS Animation</a> has completed. If the animation aborts before reaching completion, such as if the element is removed from the DOM or the animation is removed from the element, the <code>animationend</code> event is not fired.",
        "text": "The animationend event is fired when a CSS Animation has completed. If the animation aborts before reaching completion, such as if the element is removed from the DOM or the animation is removed from the element, the animationend event is not fired."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event\">animationend event</a>",
        "text": "animationend event"
      },
      "description": {
        "html": "The <strong><code>animationend</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations\">CSS Animation</a> has completed. If the animation aborts before reaching completion, such as if the element is removed from the DOM or the animation is removed from the element, the <code>animationend</code> event is not fired.",
        "text": "The animationend event is fired when a CSS Animation has completed. If the animation aborts before reaching completion, such as if the element is removed from the DOM or the animation is removed from the element, the animationend event is not fired."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event\">animationend event</a>",
        "text": "animationend event"
      },
      "description": {
        "html": "The <strong><code>animationend</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations\">CSS Animation</a> has completed. If the animation aborts before reaching completion, such as if the element is removed from the DOM or the animation is removed from the element, the <code>animationend</code> event is not fired.",
        "text": "The animationend event is fired when a CSS Animation has completed. If the animation aborts before reaching completion, such as if the element is removed from the DOM or the animation is removed from the element, the animationend event is not fired."
      }
    }
  ],
  "animationiteration event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/animationiteration_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationiteration_event\">animationiteration event</a>",
        "text": "animationiteration event"
      },
      "description": {
        "html": "The <strong><code>animationiteration</code></strong> event is fired when an iteration of a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations\">CSS Animation</a> ends, and another one begins. This event does not occur at the same time as the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event\" title=\"animationend\"><code>animationend</code></a> event, and therefore does not occur for animations with an <code>animation-iteration-count</code> of one.",
        "text": "The animationiteration event is fired when an iteration of a CSS Animation ends, and another one begins. This event does not occur at the same time as the animationend event, and therefore does not occur for animations with an animation-iteration-count of one."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/animationiteration_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationiteration_event\">animationiteration event</a>",
        "text": "animationiteration event"
      },
      "description": {
        "html": "The <strong><code>animationiteration</code></strong> event is fired when an iteration of a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations\">CSS Animation</a> ends, and another one begins. This event does not occur at the same time as the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event\" title=\"animationend\"><code>animationend</code></a> event, and therefore does not occur for animations with an <code>animation-iteration-count</code> of one.",
        "text": "The animationiteration event is fired when an iteration of a CSS Animation ends, and another one begins. This event does not occur at the same time as the animationend event, and therefore does not occur for animations with an animation-iteration-count of one."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/animationiteration_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationiteration_event\">animationiteration event</a>",
        "text": "animationiteration event"
      },
      "description": {
        "html": "The <strong><code>animationiteration</code></strong> event is fired when an iteration of a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations\">CSS Animation</a> ends, and another one begins. This event does not occur at the same time as the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event\" title=\"animationend\"><code>animationend</code></a> event, and therefore does not occur for animations with an <code>animation-iteration-count</code> of one.",
        "text": "The animationiteration event is fired when an iteration of a CSS Animation ends, and another one begins. This event does not occur at the same time as the animationend event, and therefore does not occur for animations with an animation-iteration-count of one."
      }
    }
  ],
  "animationstart event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/animationstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationstart_event\">animationstart event</a>",
        "text": "animationstart event"
      },
      "description": {
        "html": "The <strong><code>animationstart</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations\">CSS Animation</a> has started. If there is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-delay\"><code>animation-delay</code></a>, this event will fire once the delay period has expired. A negative delay will cause the event to fire with an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent/elapsedTime\" title=\"elapsedTime\"><code>elapsedTime</code></a> equal to the absolute value of the delay (and, correspondingly, the animation will begin playing at that time index into the sequence).",
        "text": "The animationstart event is fired when a CSS Animation has started. If there is an animation-delay, this event will fire once the delay period has expired. A negative delay will cause the event to fire with an elapsedTime equal to the absolute value of the delay (and, correspondingly, the animation will begin playing at that time index into the sequence)."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/animationstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationstart_event\">animationstart event</a>",
        "text": "animationstart event"
      },
      "description": {
        "html": "The <strong><code>animationstart</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations\">CSS Animation</a> has started. If there is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-delay\"><code>animation-delay</code></a>, this event will fire once the delay period has expired. A negative delay will cause the event to fire with an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent/elapsedTime\" title=\"elapsedTime\"><code>elapsedTime</code></a> equal to the absolute value of the delay (and, correspondingly, the animation will begin playing at that time index into the sequence).",
        "text": "The animationstart event is fired when a CSS Animation has started. If there is an animation-delay, this event will fire once the delay period has expired. A negative delay will cause the event to fire with an elapsedTime equal to the absolute value of the delay (and, correspondingly, the animation will begin playing at that time index into the sequence)."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/animationstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animationstart_event\">animationstart event</a>",
        "text": "animationstart event"
      },
      "description": {
        "html": "The <strong><code>animationstart</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations\">CSS Animation</a> has started. If there is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-delay\"><code>animation-delay</code></a>, this event will fire once the delay period has expired. A negative delay will cause the event to fire with an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent/elapsedTime\" title=\"elapsedTime\"><code>elapsedTime</code></a> equal to the absolute value of the delay (and, correspondingly, the animation will begin playing at that time index into the sequence).",
        "text": "The animationstart event is fired when a CSS Animation has started. If there is an animation-delay, this event will fire once the delay period has expired. A negative delay will cause the event to fire with an elapsedTime equal to the absolute value of the delay (and, correspondingly, the animation will begin playing at that time index into the sequence)."
      }
    }
  ],
  "copy event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/copy_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/copy_event\">copy event</a>",
        "text": "copy event"
      },
      "description": {
        "html": "The <strong><code>copy</code></strong> event fires when the user initiates a copy action through the browser&apos;s user interface.",
        "text": "The copy event fires when the user initiates a copy action through the browser's user interface."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/copy_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/copy_event\">copy event</a>",
        "text": "copy event"
      },
      "description": {
        "html": "The <strong><code>copy</code></strong> event fires when the user initiates a copy action through the browser&apos;s user interface.",
        "text": "The copy event fires when the user initiates a copy action through the browser's user interface."
      }
    },
    {
      "status": "standard",
      "type": "SVGGraphicsElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement/copy_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement/copy_event\">copy event</a>",
        "text": "copy event"
      },
      "description": {
        "html": "The <strong><code>copy</code></strong> event fires on <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement\" title=\"SVGGraphicsElements\"><code>SVGGraphicsElements</code></a> when the user initiates a copy action through the browser&apos;s user interface.",
        "text": "The copy event fires on SVGGraphicsElements when the user initiates a copy action through the browser's user interface."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/copy_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/copy_event\">copy event</a>",
        "text": "copy event"
      },
      "description": {
        "html": "The <strong><code>copy</code></strong> event fires when the user initiates a copy action through the browser&apos;s user interface.",
        "text": "The copy event fires when the user initiates a copy action through the browser's user interface."
      }
    }
  ],
  "cut event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/cut_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/cut_event\">cut event</a>",
        "text": "cut event"
      },
      "description": {
        "html": "The <strong><code>cut</code></strong> event fires when the user initiates a cut action through the browser&apos;s user interface.",
        "text": "The cut event fires when the user initiates a cut action through the browser's user interface."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/cut_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/cut_event\">cut event</a>",
        "text": "cut event"
      },
      "description": {
        "html": "The <strong><code>cut</code></strong> event is fired when the user has initiated a &quot;cut&quot; action through the browser&apos;s user interface.",
        "text": "The cut event is fired when the user has initiated a \"cut\" action through the browser's user interface."
      }
    },
    {
      "status": "standard",
      "type": "SVGGraphicsElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement/cut_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement/cut_event\">cut event</a>",
        "text": "cut event"
      },
      "description": {
        "html": "The <strong><code>cut</code></strong> event is fired on an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement\"><code>SVGGraphicsElement</code></a> when the user has initiated a &quot;cut&quot; action through the browser&apos;s user interface.",
        "text": "The cut event is fired on an SVGGraphicsElement when the user has initiated a \"cut\" action through the browser's user interface."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/cut_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/cut_event\">cut event</a>",
        "text": "cut event"
      },
      "description": {
        "html": "The <strong><code>cut</code></strong> event is fired when the user has initiated a &quot;cut&quot; action through the browser&apos;s user interface.",
        "text": "The cut event is fired when the user has initiated a \"cut\" action through the browser's user interface."
      }
    }
  ],
  "DOMContentLoaded event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/DOMContentLoaded_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/DOMContentLoaded_event\">DOMContentLoaded event</a>",
        "text": "DOMContentLoaded event"
      },
      "description": {
        "html": "The <strong><code>DOMContentLoaded</code></strong> event fires when the initial HTML document has been completely loaded and parsed, without waiting for stylesheets, images, and subframes to finish loading.",
        "text": "The DOMContentLoaded event fires when the initial HTML document has been completely loaded and parsed, without waiting for stylesheets, images, and subframes to finish loading."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/DOMContentLoaded_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/DOMContentLoaded_event\">DOMContentLoaded event</a>",
        "text": "DOMContentLoaded event"
      },
      "description": {
        "html": "The <strong><code>DOMContentLoaded</code></strong> event fires when the HTML document has been completely parsed, and all deferred scripts (<code>&lt;script defer src=&quot;&#x2026;&quot;&gt;</code> and <code>&lt;script type=&quot;module&quot;&gt;</code>) have downloaded and executed. It doesn&apos;t wait for other things like images, subframes, and async scripts to finish loading.",
        "text": "The DOMContentLoaded event fires when the HTML document has been completely parsed, and all deferred scripts (<script defer src=\"…\"> and <script type=\"module\">) have downloaded and executed. It doesn't wait for other things like images, subframes, and async scripts to finish loading."
      }
    }
  ],
  "dragend event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragend_event\">dragend event</a>",
        "text": "dragend event"
      },
      "description": {
        "html": "The <code>dragend</code> event is fired when a drag operation is being ended (by releasing a mouse button or hitting the escape key).",
        "text": "The dragend event is fired when a drag operation is being ended (by releasing a mouse button or hitting the escape key)."
      }
    }
  ],
  "dragenter event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragenter_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragenter_event\">dragenter event</a>",
        "text": "dragenter event"
      },
      "description": {
        "html": "The <code>dragenter</code> event is fired when a dragged element or text selection enters a valid drop target.",
        "text": "The dragenter event is fired when a dragged element or text selection enters a valid drop target."
      }
    }
  ],
  "dragleave event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragleave_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragleave_event\">dragleave event</a>",
        "text": "dragleave event"
      },
      "description": {
        "html": "The <code>dragleave</code> event is fired when a dragged element or text selection leaves a valid drop target.",
        "text": "The dragleave event is fired when a dragged element or text selection leaves a valid drop target."
      }
    }
  ],
  "dragover event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragover_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragover_event\">dragover event</a>",
        "text": "dragover event"
      },
      "description": {
        "html": "The <code>dragover</code> event is fired when an element or text selection is being dragged over a valid drop target (every few hundred milliseconds).",
        "text": "The dragover event is fired when an element or text selection is being dragged over a valid drop target (every few hundred milliseconds)."
      }
    }
  ],
  "dragstart event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragstart_event\">dragstart event</a>",
        "text": "dragstart event"
      },
      "description": {
        "html": "The <code>dragstart</code> event is fired when the user starts dragging an element or text selection.",
        "text": "The dragstart event is fired when the user starts dragging an element or text selection."
      }
    }
  ],
  "drag event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/drag_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/drag_event\">drag event</a>",
        "text": "drag event"
      },
      "description": {
        "html": "The <code>drag</code> event is fired every few hundred milliseconds as an element or text selection is being dragged by the user.",
        "text": "The drag event is fired every few hundred milliseconds as an element or text selection is being dragged by the user."
      }
    }
  ],
  "drop event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/drop_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/drop_event\">drop event</a>",
        "text": "drop event"
      },
      "description": {
        "html": "The <strong><code>drop</code></strong> event is fired when an element or text selection is dropped on a valid drop target.",
        "text": "The drop event is fired when an element or text selection is dropped on a valid drop target."
      }
    }
  ],
  "fullscreenchange event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenchange_event\">fullscreenchange event</a>",
        "text": "fullscreenchange event"
      },
      "description": {
        "html": "The <code>fullscreenchange</code> event is fired immediately after the browser switches into or out of fullscreen mode.",
        "text": "The fullscreenchange event is fired immediately after the browser switches into or out of fullscreen mode."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/fullscreenchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/fullscreenchange_event\">fullscreenchange event</a>",
        "text": "fullscreenchange event"
      },
      "description": {
        "html": "The <code>fullscreenchange</code> event is fired immediately after an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> switches into or out of fullscreen mode.",
        "text": "The fullscreenchange event is fired immediately after an Element switches into or out of fullscreen mode."
      }
    }
  ],
  "fullscreenerror event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenerror_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenerror_event\">fullscreenerror event</a>",
        "text": "fullscreenerror event"
      },
      "description": {
        "html": "The <code>fullscreenerror</code> event is fired when the browser cannot switch to fullscreen mode.",
        "text": "The fullscreenerror event is fired when the browser cannot switch to fullscreen mode."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/fullscreenerror_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/fullscreenerror_event\">fullscreenerror event</a>",
        "text": "fullscreenerror event"
      },
      "description": {
        "html": "The <code>fullscreenerror</code> event is fired when the browser cannot switch to fullscreen mode.",
        "text": "The fullscreenerror event is fired when the browser cannot switch to fullscreen mode."
      }
    }
  ],
  "gotpointercapture event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/gotpointercapture_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/gotpointercapture_event\">gotpointercapture event</a>",
        "text": "gotpointercapture event"
      },
      "description": {
        "html": "The <strong><code>gotpointercapture</code></strong> event is fired when an element captures a pointer using <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/setPointerCapture\"><code>setPointerCapture()</code></a>.",
        "text": "The gotpointercapture event is fired when an element captures a pointer using setPointerCapture()."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/gotpointercapture_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/gotpointercapture_event\">gotpointercapture event</a>",
        "text": "gotpointercapture event"
      },
      "description": {
        "html": "The <strong><code>gotpointercapture</code></strong> event is fired when an element captures a pointer using <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/setPointerCapture\"><code>setPointerCapture()</code></a>.",
        "text": "The gotpointercapture event is fired when an element captures a pointer using setPointerCapture()."
      }
    }
  ],
  "keydown event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/keydown_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/keydown_event\">keydown event</a>",
        "text": "keydown event"
      },
      "description": {
        "html": "The <strong><code>keydown</code></strong> event is fired when a key is pressed.",
        "text": "The keydown event is fired when a key is pressed."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/keydown_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/keydown_event\">keydown event</a>",
        "text": "keydown event"
      },
      "description": {
        "html": "The <strong><code>keydown</code></strong> event is fired when a key is pressed.",
        "text": "The keydown event is fired when a key is pressed."
      }
    }
  ],
  "keypress event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/keypress_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/keypress_event\">keypress event</a>",
        "text": "keypress event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/keypress_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/keypress_event\">keypress event</a>",
        "text": "keypress event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "keyup event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/keyup_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/keyup_event\">keyup event</a>",
        "text": "keyup event"
      },
      "description": {
        "html": "The <strong><code>keyup</code></strong> event is fired when a key is released.",
        "text": "The keyup event is fired when a key is released."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/keyup_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/keyup_event\">keyup event</a>",
        "text": "keyup event"
      },
      "description": {
        "html": "The <strong><code>keyup</code></strong> event is fired when a key is released.",
        "text": "The keyup event is fired when a key is released."
      }
    }
  ],
  "lostpointercapture event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/lostpointercapture_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/lostpointercapture_event\">lostpointercapture event</a>",
        "text": "lostpointercapture event"
      },
      "description": {
        "html": "The <strong><code>lostpointercapture</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events#pointer_capture\">captured pointer</a> is released.",
        "text": "The lostpointercapture event is fired when a captured pointer is released."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/lostpointercapture_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/lostpointercapture_event\">lostpointercapture event</a>",
        "text": "lostpointercapture event"
      },
      "description": {
        "html": "The <strong><code>lostpointercapture</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events#pointer_capture\">captured pointer</a> is released.",
        "text": "The lostpointercapture event is fired when a captured pointer is released."
      }
    }
  ],
  "paste event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/paste_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/paste_event\">paste event</a>",
        "text": "paste event"
      },
      "description": {
        "html": "The <strong><code>paste</code></strong> event fires when the user initiates a paste action through the browser&apos;s user interface.",
        "text": "The paste event fires when the user initiates a paste action through the browser's user interface."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/paste_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/paste_event\">paste event</a>",
        "text": "paste event"
      },
      "description": {
        "html": "The <strong><code>paste</code></strong> event is fired when the user has initiated a &quot;paste&quot; action through the browser&apos;s user interface.",
        "text": "The paste event is fired when the user has initiated a \"paste\" action through the browser's user interface."
      }
    },
    {
      "status": "standard",
      "type": "SVGGraphicsElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement/paste_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement/paste_event\">paste event</a>",
        "text": "paste event"
      },
      "description": {
        "html": "The <strong><code>paste</code></strong> event is fired on an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement\"><code>SVGGraphicsElement</code></a> when the user has initiated a &quot;paste&quot; action through the browser&apos;s user interface.",
        "text": "The paste event is fired on an SVGGraphicsElement when the user has initiated a \"paste\" action through the browser's user interface."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/paste_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/paste_event\">paste event</a>",
        "text": "paste event"
      },
      "description": {
        "html": "The <strong><code>paste</code></strong> event is fired when the user has initiated a &quot;paste&quot; action through the browser&apos;s user interface.",
        "text": "The paste event is fired when the user has initiated a \"paste\" action through the browser's user interface."
      }
    }
  ],
  "pointercancel event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event\">pointercancel event</a>",
        "text": "pointercancel event"
      },
      "description": {
        "html": "The <strong><code>pointercancel</code></strong> event is fired when the browser determines that there are unlikely to be any more pointer events, or if after the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a> event is fired, the pointer is then used to manipulate the viewport by panning, zooming, or scrolling.",
        "text": "The pointercancel event is fired when the browser determines that there are unlikely to be any more pointer events, or if after the pointerdown event is fired, the pointer is then used to manipulate the viewport by panning, zooming, or scrolling."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event\">pointercancel event</a>",
        "text": "pointercancel event"
      },
      "description": {
        "html": "The <strong><code>pointercancel</code></strong> event is fired when the browser determines that there are unlikely to be any more pointer events, or if after the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a> event is fired, the pointer is then used to manipulate the viewport by panning, zooming, or scrolling.",
        "text": "The pointercancel event is fired when the browser determines that there are unlikely to be any more pointer events, or if after the pointerdown event is fired, the pointer is then used to manipulate the viewport by panning, zooming, or scrolling."
      }
    }
  ],
  "pointerdown event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerdown_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerdown_event\">pointerdown event</a>",
        "text": "pointerdown event"
      },
      "description": {
        "html": "The <code>pointerdown</code> event is fired when a pointer becomes active. For mouse, it is fired when the device transitions from no buttons pressed to at least one button pressed. For touch, it is fired when physical contact is made with the digitizer. For pen, it is fired when the stylus makes physical contact with the digitizer.",
        "text": "The pointerdown event is fired when a pointer becomes active. For mouse, it is fired when the device transitions from no buttons pressed to at least one button pressed. For touch, it is fired when physical contact is made with the digitizer. For pen, it is fired when the stylus makes physical contact with the digitizer."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerdown_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerdown_event\">pointerdown event</a>",
        "text": "pointerdown event"
      },
      "description": {
        "html": "The <code>pointerdown</code> event is fired when a pointer becomes active. For mouse, it is fired when the device transitions from no buttons pressed to at least one button pressed. For touch, it is fired when physical contact is made with the digitizer. For pen, it is fired when the stylus makes physical contact with the digitizer.",
        "text": "The pointerdown event is fired when a pointer becomes active. For mouse, it is fired when the device transitions from no buttons pressed to at least one button pressed. For touch, it is fired when physical contact is made with the digitizer. For pen, it is fired when the stylus makes physical contact with the digitizer."
      }
    }
  ],
  "pointerenter event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerenter_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerenter_event\">pointerenter event</a>",
        "text": "pointerenter event"
      },
      "description": {
        "html": "The <code>pointerenter</code> event fires when a pointing device is moved into the hit test boundaries of an element or one of its descendants, including as a result of a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a> event from a device that does not support hover (see <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a>).",
        "text": "The pointerenter event fires when a pointing device is moved into the hit test boundaries of an element or one of its descendants, including as a result of a pointerdown event from a device that does not support hover (see pointerdown)."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerenter_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerenter_event\">pointerenter event</a>",
        "text": "pointerenter event"
      },
      "description": {
        "html": "The <code>pointerenter</code> event fires when a pointing device is moved into the hit test boundaries of an element or one of its descendants, including as a result of a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a> event from a device that does not support hover (see <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a>).",
        "text": "The pointerenter event fires when a pointing device is moved into the hit test boundaries of an element or one of its descendants, including as a result of a pointerdown event from a device that does not support hover (see pointerdown)."
      }
    }
  ],
  "pointerleave event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerleave_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerleave_event\">pointerleave event</a>",
        "text": "pointerleave event"
      },
      "description": {
        "html": "The <code>pointerleave</code> event is fired when a pointing device is moved out of the hit test boundaries of an element. For pen devices, this event is fired when the stylus leaves the hover range detectable by the digitizer.",
        "text": "The pointerleave event is fired when a pointing device is moved out of the hit test boundaries of an element. For pen devices, this event is fired when the stylus leaves the hover range detectable by the digitizer."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerleave_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerleave_event\">pointerleave event</a>",
        "text": "pointerleave event"
      },
      "description": {
        "html": "The <code>pointerleave</code> event is fired when a pointing device is moved out of the hit test boundaries of an element. For pen devices, this event is fired when the stylus leaves the hover range detectable by the digitizer.",
        "text": "The pointerleave event is fired when a pointing device is moved out of the hit test boundaries of an element. For pen devices, this event is fired when the stylus leaves the hover range detectable by the digitizer."
      }
    }
  ],
  "pointerlockchange event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/pointerlockchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/pointerlockchange_event\">pointerlockchange event</a>",
        "text": "pointerlockchange event"
      },
      "description": {
        "html": "The <code>pointerlockchange</code> event is fired when the pointer is locked/unlocked.",
        "text": "The pointerlockchange event is fired when the pointer is locked/unlocked."
      }
    }
  ],
  "pointerlockerror event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/pointerlockerror_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/pointerlockerror_event\">pointerlockerror event</a>",
        "text": "pointerlockerror event"
      },
      "description": {
        "html": "The <code>pointerlockerror</code> event is fired when locking the pointer failed (for technical reasons or because the permission was denied).",
        "text": "The pointerlockerror event is fired when locking the pointer failed (for technical reasons or because the permission was denied)."
      }
    }
  ],
  "pointermove event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointermove_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointermove_event\">pointermove event</a>",
        "text": "pointermove event"
      },
      "description": {
        "html": "The <code>pointermove</code> event is fired when a pointer changes coordinates, and the pointer has not been <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event\">canceled</a> by a browser <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action\">touch-action</a>.",
        "text": "The pointermove event is fired when a pointer changes coordinates, and the pointer has not been canceled by a browser touch-action."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointermove_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointermove_event\">pointermove event</a>",
        "text": "pointermove event"
      },
      "description": {
        "html": "The <code>pointermove</code> event is fired when a pointer changes coordinates, and the pointer has not been <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event\">canceled</a> by a browser <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action\">touch-action</a>.",
        "text": "The pointermove event is fired when a pointer changes coordinates, and the pointer has not been canceled by a browser touch-action."
      }
    }
  ],
  "pointerout event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerout_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerout_event\">pointerout event</a>",
        "text": "pointerout event"
      },
      "description": {
        "html": "The <code>pointerout</code> event is fired for several reasons including: pointing device is moved out of the <em>hit test</em> boundaries of an element; firing the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a> event for a device that does not support hover (see <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a>); after firing the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a> event (see <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a>); when a pen stylus leaves the hover range detectable by the digitizer.",
        "text": "The pointerout event is fired for several reasons including: pointing device is moved out of the hit test boundaries of an element; firing the pointerup event for a device that does not support hover (see pointerup); after firing the pointercancel event (see pointercancel); when a pen stylus leaves the hover range detectable by the digitizer."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerout_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerout_event\">pointerout event</a>",
        "text": "pointerout event"
      },
      "description": {
        "html": "The <code>pointerout</code> event is fired for several reasons including: pointing device is moved out of the <em>hit test</em> boundaries of an element; firing the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a> event for a device that does not support hover (see <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a>); after firing the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a> event (see <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a>); when a pen stylus leaves the hover range detectable by the digitizer.",
        "text": "The pointerout event is fired for several reasons including: pointing device is moved out of the hit test boundaries of an element; firing the pointerup event for a device that does not support hover (see pointerup); after firing the pointercancel event (see pointercancel); when a pen stylus leaves the hover range detectable by the digitizer."
      }
    }
  ],
  "pointerover event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerover_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerover_event\">pointerover event</a>",
        "text": "pointerover event"
      },
      "description": {
        "html": "The <code>pointerover</code> event is fired when a pointing device is moved into an element&apos;s hit test boundaries.",
        "text": "The pointerover event is fired when a pointing device is moved into an element's hit test boundaries."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerover_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerover_event\">pointerover event</a>",
        "text": "pointerover event"
      },
      "description": {
        "html": "The <code>pointerover</code> event is fired when a pointing device is moved into an element&apos;s hit test boundaries.",
        "text": "The pointerover event is fired when a pointing device is moved into an element's hit test boundaries."
      }
    }
  ],
  "pointerup event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerup_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerup_event\">pointerup event</a>",
        "text": "pointerup event"
      },
      "description": {
        "html": "The <code>pointerup</code> event is fired when a pointer is no longer active.",
        "text": "The pointerup event is fired when a pointer is no longer active."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerup_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerup_event\">pointerup event</a>",
        "text": "pointerup event"
      },
      "description": {
        "html": "The <code>pointerup</code> event is fired when a pointer is no longer active.",
        "text": "The pointerup event is fired when a pointer is no longer active."
      }
    }
  ],
  "readystatechange event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/readystatechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/readystatechange_event\">readystatechange event</a>",
        "text": "readystatechange event"
      },
      "description": {
        "html": "The <strong><code>readystatechange</code></strong> event is fired when the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState\" title=\"readyState\"><code>readyState</code></a> attribute of a document has changed.",
        "text": "The readystatechange event is fired when the readyState attribute of a document has changed."
      }
    }
  ],
  "scroll event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/scroll_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/scroll_event\">scroll event</a>",
        "text": "scroll event"
      },
      "description": {
        "html": "\n  The <strong><code>scroll</code></strong> event fires when the document view has been scrolled.\n  To detect when scrolling has completed, see the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/scrollend_event\" title=\"Document: scrollend event\"><code>Document: scrollend event</code></a>.\n  For element scrolling, see <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event\" title=\"Element: scroll event\"><code>Element: scroll event</code></a>.\n",
        "text": "\n  The scroll event fires when the document view has been scrolled.\n  To detect when scrolling has completed, see the Document: scrollend event.\n  For element scrolling, see Element: scroll event.\n"
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event\">scroll event</a>",
        "text": "scroll event"
      },
      "description": {
        "html": "\n  The <strong><code>scroll</code></strong> event fires when an element has been scrolled.\n  To detect when scrolling has completed, see the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollend_event\" title=\"Element: scrollend event\"><code>Element: scrollend event</code></a>.\n",
        "text": "\n  The scroll event fires when an element has been scrolled.\n  To detect when scrolling has completed, see the Element: scrollend event.\n"
      }
    },
    {
      "status": "standard",
      "type": "VisualViewport",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/scroll_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/scroll_event\">scroll event</a>",
        "text": "scroll event"
      },
      "description": {
        "html": "The <strong><code>scroll</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport\"><code>VisualViewport</code></a> interface is fired when the visual viewport is scrolled.",
        "text": "The scroll event of the VisualViewport interface is fired when the visual viewport is scrolled."
      }
    }
  ],
  "selectionchange event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/selectionchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/selectionchange_event\">selectionchange event</a>",
        "text": "selectionchange event"
      },
      "description": {
        "html": "The <strong><code>selectionchange</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Selection\">Selection API</a> is fired when the current <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Selection\"><code>Selection</code></a> of a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document\"><code>Document</code></a> is changed.",
        "text": "The selectionchange event of the Selection API is fired when the current Selection of a Document is changed."
      }
    }
  ],
  "touchcancel event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/touchcancel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchcancel_event\">touchcancel event</a>",
        "text": "touchcancel event"
      },
      "description": {
        "html": "The <code>touchcancel</code> event is fired when one or more touch points have been disrupted in an implementation-specific manner (for example, too many touch points are created).",
        "text": "The touchcancel event is fired when one or more touch points have been disrupted in an implementation-specific manner (for example, too many touch points are created)."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/touchcancel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchcancel_event\">touchcancel event</a>",
        "text": "touchcancel event"
      },
      "description": {
        "html": "The <code>touchcancel</code> event is fired when one or more touch points have been disrupted in an implementation-specific manner (for example, too many touch points are created).",
        "text": "The touchcancel event is fired when one or more touch points have been disrupted in an implementation-specific manner (for example, too many touch points are created)."
      }
    }
  ],
  "touchend event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/touchend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchend_event\">touchend event</a>",
        "text": "touchend event"
      },
      "description": {
        "html": "The <code>touchend</code> event fires when one or more touch points are removed from the touch surface.",
        "text": "The touchend event fires when one or more touch points are removed from the touch surface."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/touchend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchend_event\">touchend event</a>",
        "text": "touchend event"
      },
      "description": {
        "html": "The <code>touchend</code> event fires when one or more touch points are removed from the touch surface.",
        "text": "The touchend event fires when one or more touch points are removed from the touch surface."
      }
    }
  ],
  "touchmove event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/touchmove_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchmove_event\">touchmove event</a>",
        "text": "touchmove event"
      },
      "description": {
        "html": "The <code>touchmove</code> event is fired when one or more touch points are moved along the touch surface.",
        "text": "The touchmove event is fired when one or more touch points are moved along the touch surface."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/touchmove_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchmove_event\">touchmove event</a>",
        "text": "touchmove event"
      },
      "description": {
        "html": "The <code>touchmove</code> event is fired when one or more touch points are moved along the touch surface.",
        "text": "The touchmove event is fired when one or more touch points are moved along the touch surface."
      }
    }
  ],
  "touchstart event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/touchstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchstart_event\">touchstart event</a>",
        "text": "touchstart event"
      },
      "description": {
        "html": "The <code>touchstart</code> event is fired when one or more touch points are placed on the touch surface.",
        "text": "The touchstart event is fired when one or more touch points are placed on the touch surface."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/touchstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/touchstart_event\">touchstart event</a>",
        "text": "touchstart event"
      },
      "description": {
        "html": "The <code>touchstart</code> event is fired when one or more touch points are placed on the touch surface.",
        "text": "The touchstart event is fired when one or more touch points are placed on the touch surface."
      }
    }
  ],
  "transitioncancel event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/transitioncancel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitioncancel_event\">transitioncancel event</a>",
        "text": "transitioncancel event"
      },
      "description": {
        "html": "The <strong><code>transitioncancel</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\">CSS transition</a> is canceled.",
        "text": "The transitioncancel event is fired when a CSS transition is canceled."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/transitioncancel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitioncancel_event\">transitioncancel event</a>",
        "text": "transitioncancel event"
      },
      "description": {
        "html": "The <strong><code>transitioncancel</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\">CSS transition</a> is canceled.",
        "text": "The transitioncancel event is fired when a CSS transition is canceled."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/transitioncancel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitioncancel_event\">transitioncancel event</a>",
        "text": "transitioncancel event"
      },
      "description": {
        "html": "The <strong><code>transitioncancel</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\">CSS transition</a> is canceled.",
        "text": "The transitioncancel event is fired when a CSS transition is canceled."
      }
    }
  ],
  "transitionend event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionend_event\">transitionend event</a>",
        "text": "transitionend event"
      },
      "description": {
        "html": "The <strong><code>transitionend</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\">CSS transition</a> has completed. In the case where a transition is removed before completion, such as if the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transition-property\"><code>transition-property</code></a> is removed or <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/display\"><code>display</code></a> is set to <code>none</code>, then the event will not be generated.",
        "text": "The transitionend event is fired when a CSS transition has completed. In the case where a transition is removed before completion, such as if the transition-property is removed or display is set to none, then the event will not be generated."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionend_event\">transitionend event</a>",
        "text": "transitionend event"
      },
      "description": {
        "html": "The <strong><code>transitionend</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\">CSS transition</a> has completed. In the case where a transition is removed before completion, such as if the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transition-property\"><code>transition-property</code></a> is removed or <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/display\"><code>display</code></a> is set to <code>none</code>, then the event will not be generated.",
        "text": "The transitionend event is fired when a CSS transition has completed. In the case where a transition is removed before completion, such as if the transition-property is removed or display is set to none, then the event will not be generated."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionend_event\">transitionend event</a>",
        "text": "transitionend event"
      },
      "description": {
        "html": "The <strong><code>transitionend</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\">CSS transition</a> has completed. In the case where a transition is removed before completion, such as if the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transition-property\"><code>transition-property</code></a> is removed or <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/display\"><code>display</code></a> is set to <code>none</code>, then the event will not be generated.",
        "text": "The transitionend event is fired when a CSS transition has completed. In the case where a transition is removed before completion, such as if the transition-property is removed or display is set to none, then the event will not be generated."
      }
    }
  ],
  "transitionrun event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionrun_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionrun_event\">transitionrun event</a>",
        "text": "transitionrun event"
      },
      "description": {
        "html": "The <strong><code>transitionrun</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\">CSS transition</a> is first created, i.e. before any <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transition-delay\"><code>transition-delay</code></a> has begun.",
        "text": "The transitionrun event is fired when a CSS transition is first created, i.e. before any transition-delay has begun."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionrun_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionrun_event\">transitionrun event</a>",
        "text": "transitionrun event"
      },
      "description": {
        "html": "The <strong><code>transitionrun</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\">CSS transition</a> is first created, i.e. before any <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transition-delay\"><code>transition-delay</code></a> has begun.",
        "text": "The transitionrun event is fired when a CSS transition is first created, i.e. before any transition-delay has begun."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionrun_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionrun_event\">transitionrun event</a>",
        "text": "transitionrun event"
      },
      "description": {
        "html": "The <strong><code>transitionrun</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\">CSS transition</a> is first created, i.e. before any <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transition-delay\"><code>transition-delay</code></a> has begun.",
        "text": "The transitionrun event is fired when a CSS transition is first created, i.e. before any transition-delay has begun."
      }
    }
  ],
  "transitionstart event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionstart_event\">transitionstart event</a>",
        "text": "transitionstart event"
      },
      "description": {
        "html": "The <strong><code>transitionstart</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\">CSS transition</a> has actually started, i.e., after any <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transition-delay\"><code>transition-delay</code></a> has ended.",
        "text": "The transitionstart event is fired when a CSS transition has actually started, i.e., after any transition-delay has ended."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionstart_event\">transitionstart event</a>",
        "text": "transitionstart event"
      },
      "description": {
        "html": "The <strong><code>transitionstart</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\">CSS transition</a> has actually started, i.e., after any <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transition-delay\"><code>transition-delay</code></a> has ended.",
        "text": "The transitionstart event is fired when a CSS transition has actually started, i.e., after any transition-delay has ended."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionstart_event\">transitionstart event</a>",
        "text": "transitionstart event"
      },
      "description": {
        "html": "The <strong><code>transitionstart</code></strong> event is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\">CSS transition</a> has actually started, i.e., after any <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transition-delay\"><code>transition-delay</code></a> has ended.",
        "text": "The transitionstart event is fired when a CSS transition has actually started, i.e., after any transition-delay has ended."
      }
    }
  ],
  "visibilitychange event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilitychange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilitychange_event\">visibilitychange event</a>",
        "text": "visibilitychange event"
      },
      "description": {
        "html": "The <code>visibilitychange</code> event is fired at the document when the contents of its tab have become visible or have been hidden.",
        "text": "The visibilitychange event is fired at the document when the contents of its tab have become visible or have been hidden."
      }
    },
    {
      "status": "standard",
      "type": "XRSession",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/visibilitychange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRSession/visibilitychange_event\">visibilitychange event</a>",
        "text": "visibilitychange event"
      },
      "description": {
        "html": "<strong>Experimental:</strong> <strong>This is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a target=\"_blank\" href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.",
        "text": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production."
      }
    }
  ],
  "wheel event": [
    {
      "status": "standard",
      "type": "Document",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/wheel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/wheel_event\">wheel event</a>",
        "text": "wheel event"
      },
      "description": {
        "html": "The <strong><code>wheel</code></strong> event fires when the user rotates a wheel button on a pointing device (typically a mouse).",
        "text": "The wheel event fires when the user rotates a wheel button on a pointing device (typically a mouse)."
      }
    },
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/wheel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/wheel_event\">wheel event</a>",
        "text": "wheel event"
      },
      "description": {
        "html": "The <strong><code>wheel</code></strong> event fires when the user rotates a wheel button on a pointing device (typically a mouse).",
        "text": "The wheel event fires when the user rotates a wheel button on a pointing device (typically a mouse)."
      }
    }
  ],
  "afterscriptexecute event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/afterscriptexecute_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/afterscriptexecute_event\">afterscriptexecute event</a>",
        "text": "afterscriptexecute event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "auxclick event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/auxclick_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/auxclick_event\">auxclick event</a>",
        "text": "auxclick event"
      },
      "description": {
        "html": "The <strong><code>auxclick</code></strong> event is fired at an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> when a non-primary pointing device button (any mouse button other than the primary&#x2014;usually leftmost&#x2014;button) has been pressed and released both within the same element.",
        "text": "The auxclick event is fired at an Element when a non-primary pointing device button (any mouse button other than the primary—usually leftmost—button) has been pressed and released both within the same element."
      }
    }
  ],
  "beforescriptexecute event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/beforescriptexecute_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/beforescriptexecute_event\">beforescriptexecute event</a>",
        "text": "beforescriptexecute event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "blur event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/blur_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/blur_event\">blur event</a>",
        "text": "blur event"
      },
      "description": {
        "html": "The <strong><code>blur</code></strong> event fires when an element has lost focus. The event does not bubble, but the related <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/focusout_event\" title=\"focusout\"><code>focusout</code></a> event that follows does bubble.",
        "text": "The blur event fires when an element has lost focus. The event does not bubble, but the related focusout event that follows does bubble."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/blur_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/blur_event\">blur event</a>",
        "text": "blur event"
      },
      "description": {
        "html": "The <strong><code>blur</code></strong> event fires when an element has lost focus.",
        "text": "The blur event fires when an element has lost focus."
      }
    }
  ],
  "click event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event\">click event</a>",
        "text": "click event"
      },
      "description": {
        "html": "An element receives a <strong><code>click</code></strong> event when a pointing device button (such as a mouse&apos;s primary mouse button) is both pressed and released while the pointer is located inside the element.",
        "text": "An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element."
      }
    }
  ],
  "compositionend event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionend_event\">compositionend event</a>",
        "text": "compositionend event"
      },
      "description": {
        "html": "The <strong><code>compositionend</code></strong> event is fired when a text composition system such as an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/Input_method_editor\">input method editor</a> completes or cancels the current composition session.",
        "text": "The compositionend event is fired when a text composition system such as an input method editor completes or cancels the current composition session."
      }
    }
  ],
  "compositionstart event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionstart_event\">compositionstart event</a>",
        "text": "compositionstart event"
      },
      "description": {
        "html": "The <strong><code>compositionstart</code></strong> event is fired when a text composition system such as an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/Input_method_editor\">input method editor</a> starts a new composition session.",
        "text": "The compositionstart event is fired when a text composition system such as an input method editor starts a new composition session."
      }
    }
  ],
  "compositionupdate event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionupdate_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionupdate_event\">compositionupdate event</a>",
        "text": "compositionupdate event"
      },
      "description": {
        "html": "The <strong><code>compositionupdate</code></strong> event is fired when a new character is received in the context of a text composition session controlled by a text composition system such as an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/Input_method_editor\">input method editor</a>.",
        "text": "The compositionupdate event is fired when a new character is received in the context of a text composition session controlled by a text composition system such as an input method editor."
      }
    }
  ],
  "contextmenu event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event\">contextmenu event</a>",
        "text": "contextmenu event"
      },
      "description": {
        "html": "The <strong><code>contextmenu</code></strong> event fires when the user attempts to open a context menu. This event is typically triggered by clicking the right mouse button, or by pressing the context menu key.",
        "text": "The contextmenu event fires when the user attempts to open a context menu. This event is typically triggered by clicking the right mouse button, or by pressing the context menu key."
      }
    }
  ],
  "dblclick event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/dblclick_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/dblclick_event\">dblclick event</a>",
        "text": "dblclick event"
      },
      "description": {
        "html": "The <strong><code>dblclick</code></strong> event fires when a pointing device button (such as a mouse&apos;s primary button) is double-clicked; that is, when it&apos;s rapidly clicked twice on a single element within a very short span of time.",
        "text": "The dblclick event fires when a pointing device button (such as a mouse's primary button) is double-clicked; that is, when it's rapidly clicked twice on a single element within a very short span of time."
      }
    }
  ],
  "DOMActivate event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/DOMActivate_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/DOMActivate_event\">DOMActivate event</a>",
        "text": "DOMActivate event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "DOMMouseScroll event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/DOMMouseScroll_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/DOMMouseScroll_event\">DOMMouseScroll event</a>",
        "text": "DOMMouseScroll event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "error event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <code>error</code> event is fired on an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> object when a resource failed to load, or can&apos;t be used. For example, if a script has an execution error or an image can&apos;t be found or is invalid.",
        "text": "The error event is fired on an Element object when a resource failed to load, or can't be used. For example, if a script has an execution error or an image can't be found or is invalid."
      }
    },
    {
      "status": "standard",
      "type": "EventSource",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/EventSource/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventSource/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <code>error</code> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventSource\"><code>EventSource</code></a> API is fired when a connection with an event source fails to be opened.",
        "text": "The error event of the EventSource API is fired when a connection with an event source fails to be opened."
      }
    },
    {
      "status": "standard",
      "type": "FileReader",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/FileReader/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <code>error</code> event is fired when the read failed due to an error (for example, because the file was not found or not readable).",
        "text": "The error event is fired when the read failed due to an error (for example, because the file was not found or not readable)."
      }
    },
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <strong><code>error</code></strong> event is fired when the resource could not be loaded due to an error (for example, a network connectivity problem).",
        "text": "The error event is fired when the resource could not be loaded due to an error (for example, a network connectivity problem)."
      }
    },
    {
      "status": "standard",
      "type": "IDBDatabase",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <code>error</code> event is fired on <code>IDBTransaction</code> when a request returns an error and the event bubbles up to the transaction object.",
        "text": "The error event is fired on IDBTransaction when a request returns an error and the event bubbles up to the transaction object."
      }
    },
    {
      "status": "standard",
      "type": "IDBRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <code>error</code> handler is executed when an error caused a request to fail.",
        "text": "The error handler is executed when an error caused a request to fail."
      }
    },
    {
      "status": "standard",
      "type": "IDBTransaction",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <code>error</code> event is fired on <code>IDBTransaction</code> when a request returns an error and the event bubbles up to the transaction object.",
        "text": "The error event is fired on IDBTransaction when a request returns an error and the event bubbles up to the transaction object."
      }
    },
    {
      "status": "standard",
      "type": "MediaRecorder",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a> interface&apos;s <strong><code>error</code></strong> event is fired when an error occurs: for example because recording wasn&apos;t allowed or was attempted using an unsupported codec.",
        "text": "The MediaRecorder interface's error event is fired when an error occurs: for example because recording wasn't allowed or was attempted using an unsupported codec."
      }
    },
    {
      "status": "standard",
      "type": "RTCDataChannel",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "A WebRTC <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/error_event\" title=\"error\" aria-current=\"page\"><code>error</code></a> event is sent to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> object&apos;s <code>onerror</code> event handler when an error occurs on the data channel.",
        "text": "A WebRTC error event is sent to an RTCDataChannel object's onerror event handler when an error occurs on the data channel."
      }
    },
    {
      "status": "standard",
      "type": "RTCDtlsTransport",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDtlsTransport/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDtlsTransport/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "An <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a> receives an <code>error</code> event when a transport-level error occurs on the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.",
        "text": "An RTCDtlsTransport receives an error event when a transport-level error occurs on the RTCPeerConnection."
      }
    },
    {
      "status": "standard",
      "type": "SpeechRecognition",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <strong><code>error</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> object is fired when a speech recognition error occurs.",
        "text": "The error event of the Web Speech API SpeechRecognition object is fired when a speech recognition error occurs."
      }
    },
    {
      "status": "standard",
      "type": "SpeechSynthesisUtterance",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <strong><code>error</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> object is fired when an error occurs that prevents the utterance from being successfully spoken.",
        "text": "The error event of the Web Speech API SpeechSynthesisUtterance object is fired when an error occurs that prevents the utterance from being successfully spoken."
      }
    },
    {
      "status": "standard",
      "type": "SVGElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SVGElement/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGElement/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <code>error</code> event is fired when an SVG element does not load properly or when an error occurs during script execution.",
        "text": "The error event is fired when an SVG element does not load properly or when an error occurs during script execution."
      }
    },
    {
      "status": "standard",
      "type": "WebSocket",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <code>error</code> event is fired when a connection with a <code>WebSocket</code> has been closed due to an error (some data couldn&apos;t be sent for example).",
        "text": "The error event is fired when a connection with a WebSocket has been closed due to an error (some data couldn't be sent for example)."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <code>error</code> event is fired on a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>Window</code></a> object when a resource failed to load or couldn&apos;t be used &#x2014; for example if a script has an execution error.",
        "text": "The error event is fired on a Window object when a resource failed to load or couldn't be used — for example if a script has an execution error."
      }
    },
    {
      "status": "standard",
      "type": "XMLHttpRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/error_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/error_event\">error event</a>",
        "text": "error event"
      },
      "description": {
        "html": "The <code>error</code> event is fired when the request encountered an error.",
        "text": "The error event is fired when the request encountered an error."
      }
    }
  ],
  "focusin event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/focusin_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/focusin_event\">focusin event</a>",
        "text": "focusin event"
      },
      "description": {
        "html": "The <strong><code>focusin</code></strong> event fires when an element has received focus, after the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event\" title=\"focus\"><code>focus</code></a> event. The two events differ in that <code>focusin</code> bubbles, while <code>focus</code> does not.",
        "text": "The focusin event fires when an element has received focus, after the focus event. The two events differ in that focusin bubbles, while focus does not."
      }
    }
  ],
  "focusout event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/focusout_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/focusout_event\">focusout event</a>",
        "text": "focusout event"
      },
      "description": {
        "html": "The <strong><code>focusout</code></strong> event fires when an element has lost focus, after the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/blur_event\" title=\"blur\"><code>blur</code></a> event. The two events differ in that <code>focusout</code> bubbles, while <code>blur</code> does not.",
        "text": "The focusout event fires when an element has lost focus, after the blur event. The two events differ in that focusout bubbles, while blur does not."
      }
    }
  ],
  "focus event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event\">focus event</a>",
        "text": "focus event"
      },
      "description": {
        "html": "The <strong><code>focus</code></strong> event fires when an element has received focus. The event does not bubble, but the related <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/focusin_event\" title=\"focusin\"><code>focusin</code></a> event that follows does bubble.",
        "text": "The focus event fires when an element has received focus. The event does not bubble, but the related focusin event that follows does bubble."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/focus_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/focus_event\">focus event</a>",
        "text": "focus event"
      },
      "description": {
        "html": "The <strong><code>focus</code></strong> event fires when an element has received focus.",
        "text": "The focus event fires when an element has received focus."
      }
    }
  ],
  "gesturechange event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/gesturechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/gesturechange_event\">gesturechange event</a>",
        "text": "gesturechange event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "gestureend event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/gestureend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/gestureend_event\">gestureend event</a>",
        "text": "gestureend event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "gesturestart event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/gesturestart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/gesturestart_event\">gesturestart event</a>",
        "text": "gesturestart event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "mousedown event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/mousedown_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mousedown_event\">mousedown event</a>",
        "text": "mousedown event"
      },
      "description": {
        "html": "The <strong><code>mousedown</code></strong> event is fired at an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> when a pointing device button is pressed while the pointer is inside the element.",
        "text": "The mousedown event is fired at an Element when a pointing device button is pressed while the pointer is inside the element."
      }
    }
  ],
  "mouseenter event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseenter_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseenter_event\">mouseenter event</a>",
        "text": "mouseenter event"
      },
      "description": {
        "html": "The <strong><code>mouseenter</code></strong> event is fired at an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired.",
        "text": "The mouseenter event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired."
      }
    }
  ],
  "mouseleave event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseleave_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseleave_event\">mouseleave event</a>",
        "text": "mouseleave event"
      },
      "description": {
        "html": "The <strong><code>mouseleave</code></strong> event is fired at an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> when the cursor of a pointing device (usually a mouse) is moved out of it.",
        "text": "The mouseleave event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it."
      }
    }
  ],
  "mousemove event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/mousemove_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mousemove_event\">mousemove event</a>",
        "text": "mousemove event"
      },
      "description": {
        "html": "The <code>mousemove</code> event is fired at an element when a pointing device (usually a mouse) is moved while the cursor&apos;s hotspot is inside it.",
        "text": "The mousemove event is fired at an element when a pointing device (usually a mouse) is moved while the cursor's hotspot is inside it."
      }
    }
  ],
  "mouseout event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseout_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseout_event\">mouseout event</a>",
        "text": "mouseout event"
      },
      "description": {
        "html": "The <strong><code>mouseout</code></strong> event is fired at an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> when a pointing device (usually a mouse) is used to move the cursor so that it is no longer contained within the element or one of its children.",
        "text": "The mouseout event is fired at an Element when a pointing device (usually a mouse) is used to move the cursor so that it is no longer contained within the element or one of its children."
      }
    }
  ],
  "mouseover event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseover_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseover_event\">mouseover event</a>",
        "text": "mouseover event"
      },
      "description": {
        "html": "The <strong><code>mouseover</code></strong> event is fired at an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> when a pointing device (such as a mouse or trackpad) is used to move the cursor onto the element or one of its child elements.",
        "text": "The mouseover event is fired at an Element when a pointing device (such as a mouse or trackpad) is used to move the cursor onto the element or one of its child elements."
      }
    }
  ],
  "mouseup event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseup_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseup_event\">mouseup event</a>",
        "text": "mouseup event"
      },
      "description": {
        "html": "The <strong><code>mouseup</code></strong> event is fired at an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\"><code>Element</code></a> when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it.",
        "text": "The mouseup event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it."
      }
    }
  ],
  "mousewheel event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/mousewheel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mousewheel_event\">mousewheel event</a>",
        "text": "mousewheel event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "msContentZoom event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/msContentZoom_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/msContentZoom_event\">msContentZoom event</a>",
        "text": "msContentZoom event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "MSGestureChange event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureChange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureChange_event\">MSGestureChange event</a>",
        "text": "MSGestureChange event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "MSGestureEnd event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureEnd_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureEnd_event\">MSGestureEnd event</a>",
        "text": "MSGestureEnd event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "MSGestureHold event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureHold_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureHold_event\">MSGestureHold event</a>",
        "text": "MSGestureHold event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "MSGestureStart event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureStart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureStart_event\">MSGestureStart event</a>",
        "text": "MSGestureStart event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "MSGestureTap event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureTap_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureTap_event\">MSGestureTap event</a>",
        "text": "MSGestureTap event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "MSInertiaStart event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/MSInertiaStart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/MSInertiaStart_event\">MSInertiaStart event</a>",
        "text": "MSInertiaStart event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "MSManipulationStateChanged event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/MSManipulationStateChanged_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/MSManipulationStateChanged_event\">MSManipulationStateChanged event</a>",
        "text": "MSManipulationStateChanged event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "select event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select_event\">select event</a>",
        "text": "select event"
      },
      "description": {
        "html": "The <strong><code>select</code></strong> event fires when some text has been selected.",
        "text": "The select event fires when some text has been selected."
      }
    },
    {
      "status": "standard",
      "type": "XRSession",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/select_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRSession/select_event\">select event</a>",
        "text": "select event"
      },
      "description": {
        "html": "<strong>Experimental:</strong> <strong>This is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a target=\"_blank\" href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.",
        "text": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production."
      }
    }
  ],
  "show event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/show_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/show_event\">show event</a>",
        "text": "show event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "webkitmouseforcechanged event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/webkitmouseforcechanged_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/webkitmouseforcechanged_event\">webkitmouseforcechanged event</a>",
        "text": "webkitmouseforcechanged event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "webkitmouseforcedown event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/webkitmouseforcedown_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/webkitmouseforcedown_event\">webkitmouseforcedown event</a>",
        "text": "webkitmouseforcedown event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "webkitmouseforceup event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/webkitmouseforceup_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/webkitmouseforceup_event\">webkitmouseforceup event</a>",
        "text": "webkitmouseforceup event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "webkitmouseforcewillbegin event": [
    {
      "status": "standard",
      "type": "Element",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/webkitmouseforcewillbegin_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/webkitmouseforcewillbegin_event\">webkitmouseforcewillbegin event</a>",
        "text": "webkitmouseforcewillbegin event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "open event": [
    {
      "status": "standard",
      "type": "EventSource",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/EventSource/open_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventSource/open_event\">open event</a>",
        "text": "open event"
      },
      "description": {
        "html": "The <code>open</code> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventSource\"><code>EventSource</code></a> API is fired when a connection with an event source is opened.",
        "text": "The open event of the EventSource API is fired when a connection with an event source is opened."
      }
    },
    {
      "status": "standard",
      "type": "RTCDataChannel",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/open_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/open_event\">open event</a>",
        "text": "open event"
      },
      "description": {
        "html": "The WebRTC <strong><code>open</code></strong> event is sent to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> object&apos;s <code>onopen</code> event handler when the underlying transport used to send and receive the data channel&apos;s messages is opened or reopened.",
        "text": "The WebRTC open event is sent to an RTCDataChannel object's onopen event handler when the underlying transport used to send and receive the data channel's messages is opened or reopened."
      }
    },
    {
      "status": "standard",
      "type": "WebSocket",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/open_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/open_event\">open event</a>",
        "text": "open event"
      },
      "description": {
        "html": "The <code>open</code> event is fired when a connection with a <code>WebSocket</code> is opened.",
        "text": "The open event is fired when a connection with a WebSocket is opened."
      }
    }
  ],
  "loadend event": [
    {
      "status": "standard",
      "type": "FileReader",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/FileReader/loadend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/loadend_event\">loadend event</a>",
        "text": "loadend event"
      },
      "description": {
        "html": "The <code>loadend</code> event is fired when a file read has completed, successfully or not.",
        "text": "The loadend event is fired when a file read has completed, successfully or not."
      }
    },
    {
      "status": "standard",
      "type": "XMLHttpRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/loadend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/loadend_event\">loadend event</a>",
        "text": "loadend event"
      },
      "description": {
        "html": "The <strong><code>loadend</code></strong> event is fired when a request has completed, whether successfully (after <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/load_event\" title=\"load\"><code>load</code></a>) or unsuccessfully (after <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort_event\" title=\"abort\"><code>abort</code></a> or <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/error_event\" title=\"error\"><code>error</code></a>).",
        "text": "The loadend event is fired when a request has completed, whether successfully (after load) or unsuccessfully (after abort or error)."
      }
    }
  ],
  "loadstart event": [
    {
      "status": "standard",
      "type": "FileReader",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/FileReader/loadstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/loadstart_event\">loadstart event</a>",
        "text": "loadstart event"
      },
      "description": {
        "html": "The <code>loadstart</code> event is fired when a file read operation has begun.",
        "text": "The loadstart event is fired when a file read operation has begun."
      }
    },
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadstart_event\">loadstart event</a>",
        "text": "loadstart event"
      },
      "description": {
        "html": "The <strong><code>loadstart</code></strong> event is fired when the browser has started to load a resource.",
        "text": "The loadstart event is fired when the browser has started to load a resource."
      }
    },
    {
      "status": "standard",
      "type": "XMLHttpRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/loadstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/loadstart_event\">loadstart event</a>",
        "text": "loadstart event"
      },
      "description": {
        "html": "The <strong><code>loadstart</code></strong> event is fired when a request has started to load data.",
        "text": "The loadstart event is fired when a request has started to load data."
      }
    }
  ],
  "load event": [
    {
      "status": "standard",
      "type": "FileReader",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/FileReader/load_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/load_event\">load event</a>",
        "text": "load event"
      },
      "description": {
        "html": "The <code>load</code> event is fired when a file has been read successfully.",
        "text": "The load event is fired when a file has been read successfully."
      }
    },
    {
      "status": "standard",
      "type": "SVGElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SVGElement/load_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGElement/load_event\">load event</a>",
        "text": "load event"
      },
      "description": {
        "html": "The <code>load</code> event fires on an <code>SVGElement</code> when it is loaded in the browser, e.g. in the DOM in the case of an embedded <code>&lt;svg&gt;</code>. It is basically the same as the standard <code>load</code> DOM event.",
        "text": "The load event fires on an SVGElement when it is loaded in the browser, e.g. in the DOM in the case of an embedded <svg>. It is basically the same as the standard load DOM event."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\">load event</a>",
        "text": "load event"
      },
      "description": {
        "html": "\n  The <strong><code>load</code></strong> event is fired when the whole page has loaded, including all dependent resources such as stylesheets, scripts, iframes, and images.\n  This is in contrast to <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/DOMContentLoaded_event\" title=\"DOMContentLoaded\"><code>DOMContentLoaded</code></a>, which is fired as soon as the page DOM has been loaded, without waiting for resources to finish loading.\n",
        "text": "\n  The load event is fired when the whole page has loaded, including all dependent resources such as stylesheets, scripts, iframes, and images.\n  This is in contrast to DOMContentLoaded, which is fired as soon as the page DOM has been loaded, without waiting for resources to finish loading.\n"
      }
    },
    {
      "status": "standard",
      "type": "XMLHttpRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/load_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/load_event\">load event</a>",
        "text": "load event"
      },
      "description": {
        "html": "The <code>load</code> event is fired when an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> transaction completes successfully.",
        "text": "The load event is fired when an XMLHttpRequest transaction completes successfully."
      }
    }
  ],
  "progress event": [
    {
      "status": "standard",
      "type": "FileReader",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/FileReader/progress_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/progress_event\">progress event</a>",
        "text": "progress event"
      },
      "description": {
        "html": "The <code>progress</code> event is fired periodically as the <code>FileReader</code> reads data.",
        "text": "The progress event is fired periodically as the FileReader reads data."
      }
    },
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/progress_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/progress_event\">progress event</a>",
        "text": "progress event"
      },
      "description": {
        "html": "The <strong><code>progress</code></strong> event is fired periodically as the browser loads a resource.",
        "text": "The progress event is fired periodically as the browser loads a resource."
      }
    },
    {
      "status": "standard",
      "type": "XMLHttpRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/progress_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/progress_event\">progress event</a>",
        "text": "progress event"
      },
      "description": {
        "html": "The <strong><code>progress</code></strong> event is fired periodically when a request receives more data.",
        "text": "The progress event is fired periodically when a request receives more data."
      }
    }
  ],
  "webglcontextcreationerror event": [
    {
      "status": "standard",
      "type": "HTMLCanvasElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/webglcontextcreationerror_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/webglcontextcreationerror_event\">webglcontextcreationerror event</a>",
        "text": "webglcontextcreationerror event"
      },
      "description": {
        "html": "The <strong><code>webglcontextcreationerror</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API\">WebGL API</a> is fired if the user agent is unable to create a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a> context.",
        "text": "The webglcontextcreationerror event of the WebGL API is fired if the user agent is unable to create a WebGLRenderingContext context."
      }
    }
  ],
  "webglcontextlost event": [
    {
      "status": "standard",
      "type": "HTMLCanvasElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/webglcontextlost_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/webglcontextlost_event\">webglcontextlost event</a>",
        "text": "webglcontextlost event"
      },
      "description": {
        "html": "The <strong><code>webglcontextlost</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API\">WebGL API</a> is fired if the user agent detects that the drawing buffer associated with a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a> object has been lost.",
        "text": "The webglcontextlost event of the WebGL API is fired if the user agent detects that the drawing buffer associated with a WebGLRenderingContext object has been lost."
      }
    }
  ],
  "webglcontextrestored event": [
    {
      "status": "standard",
      "type": "HTMLCanvasElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/webglcontextrestored_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/webglcontextrestored_event\">webglcontextrestored event</a>",
        "text": "webglcontextrestored event"
      },
      "description": {
        "html": "The <strong><code>webglcontextrestored</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API\">WebGL API</a> is fired if the user agent restores the drawing buffer for a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a> object.",
        "text": "The webglcontextrestored event of the WebGL API is fired if the user agent restores the drawing buffer for a WebGLRenderingContext object."
      }
    }
  ],
  "toggle event": [
    {
      "status": "standard",
      "type": "HTMLDetailsElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLDetailsElement/toggle_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLDetailsElement/toggle_event\">toggle event</a>",
        "text": "toggle event"
      },
      "description": {
        "html": "The <strong><code>toggle</code></strong> event fires when the <code>open</code>/<code>closed</code> state of a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details\"><code>&lt;details&gt;</code></a> element is toggled.",
        "text": "The toggle event fires when the open/closed state of a <details> element is toggled."
      }
    }
  ],
  "cancel event": [
    {
      "status": "standard",
      "type": "HTMLDialogElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/cancel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/cancel_event\">cancel event</a>",
        "text": "cancel event"
      },
      "description": {
        "html": "The <strong><code>cancel</code></strong> event fires on a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\"><code>&lt;dialog&gt;</code></a> when the user instructs the browser that they wish to dismiss the current open dialog. The browser fires this event when the user presses the <kbd>Esc</kbd> key.",
        "text": "The cancel event fires on a <dialog> when the user instructs the browser that they wish to dismiss the current open dialog. The browser fires this event when the user presses the Esc key."
      }
    }
  ],
  "close event": [
    {
      "status": "standard",
      "type": "HTMLDialogElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/close_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/close_event\">close event</a>",
        "text": "close event"
      },
      "description": {
        "html": "The <code>close</code> event is fired on an <code>HTMLDialogElement</code> object when the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\"><code>&lt;dialog&gt;</code></a> it represents has been closed.",
        "text": "The close event is fired on an HTMLDialogElement object when the <dialog> it represents has been closed."
      }
    },
    {
      "status": "standard",
      "type": "IDBDatabase",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/IDBDatabase/close_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBDatabase/close_event\">close event</a>",
        "text": "close event"
      },
      "description": {
        "html": "The <code>close</code> event is fired on <code>IDBDatabase</code> when the database connection is unexpectedly closed. This could happen, for example, if the underlying storage is removed or if the user clears the database in the browser&apos;s history preferences.",
        "text": "The close event is fired on IDBDatabase when the database connection is unexpectedly closed. This could happen, for example, if the underlying storage is removed or if the user clears the database in the browser's history preferences."
      }
    },
    {
      "status": "standard",
      "type": "RTCDataChannel",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/close_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/close_event\">close event</a>",
        "text": "close event"
      },
      "description": {
        "html": "The <strong><code>close</code></strong> event is sent to the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/close_event\" title=\"onclose\" aria-current=\"page\"><code>onclose</code></a> event handler on an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> instance when the data transport for the data channel has closed. Before any further data can be transferred using <code>RTCDataChannel</code>, a new &apos;RTCDataChannel&apos; instance must be created.",
        "text": "The close event is sent to the onclose event handler on an RTCDataChannel instance when the data transport for the data channel has closed. Before any further data can be transferred using RTCDataChannel, a new 'RTCDataChannel' instance must be created."
      }
    },
    {
      "status": "standard",
      "type": "WebSocket",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close_event\">close event</a>",
        "text": "close event"
      },
      "description": {
        "html": "The <code>close</code> event is fired when a connection with a <code>WebSocket</code> is closed.",
        "text": "The close event is fired when a connection with a WebSocket is closed."
      }
    }
  ],
  "beforeinput event": [
    {
      "status": "standard",
      "type": "HTMLElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/beforeinput_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/beforeinput_event\">beforeinput event</a>",
        "text": "beforeinput event"
      },
      "description": {
        "html": "The DOM <strong><code>beforeinput</code></strong> event fires when the value of an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, or <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> element is about to be modified. The event also applies to elements with <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/contentEditable\" title=\"contenteditable\"><code>contenteditable</code></a> enabled, and to any element when <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/designMode\" title=\"designMode\"><code>designMode</code></a> is turned on.",
        "text": "The DOM beforeinput event fires when the value of an <input>, or <textarea> element is about to be modified. The event also applies to elements with contenteditable enabled, and to any element when designMode is turned on."
      }
    }
  ],
  "input event": [
    {
      "status": "standard",
      "type": "HTMLElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event\">input event</a>",
        "text": "input event"
      },
      "description": {
        "html": "The <strong><code>input</code></strong> event fires when the <code>value</code> of an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>, or <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> element has been changed.",
        "text": "The input event fires when the value of an <input>, <select>, or <textarea> element has been changed."
      }
    }
  ],
  "formdata event": [
    {
      "status": "standard",
      "type": "HTMLFormElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/formdata_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/formdata_event\">formdata event</a>",
        "text": "formdata event"
      },
      "description": {
        "html": "The <strong><code>formdata</code></strong> event fires after the entry list representing the form&apos;s data is constructed. This happens when the form is submitted, but can also be triggered by the invocation of a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData\" title=\"FormData()\"><code>FormData()</code></a> constructor.",
        "text": "The formdata event fires after the entry list representing the form's data is constructed. This happens when the form is submitted, but can also be triggered by the invocation of a FormData() constructor."
      }
    }
  ],
  "reset event": [
    {
      "status": "standard",
      "type": "HTMLFormElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/reset_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/reset_event\">reset event</a>",
        "text": "reset event"
      },
      "description": {
        "html": "The <strong><code>reset</code></strong> event fires when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> is reset.",
        "text": "The reset event fires when a <form> is reset."
      }
    },
    {
      "status": "standard",
      "type": "XRReferenceSpace",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpace/reset_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpace/reset_event\">reset event</a>",
        "text": "reset event"
      },
      "description": {
        "html": "The <strong><code>reset</code></strong> event is sent to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> object when a discontinuity is detected in either the native origin or the effective origin, causing a jump in the position or orientation of objects oriented using the reference space. This is common when the user calibrates or recalibrates an XR device, or if the device automatically changes its origin after losing tracking of the user, then re-gaining it.",
        "text": "The reset event is sent to an XRReferenceSpace object when a discontinuity is detected in either the native origin or the effective origin, causing a jump in the position or orientation of objects oriented using the reference space. This is common when the user calibrates or recalibrates an XR device, or if the device automatically changes its origin after losing tracking of the user, then re-gaining it."
      }
    }
  ],
  "submit event": [
    {
      "status": "standard",
      "type": "HTMLFormElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit_event\">submit event</a>",
        "text": "submit event"
      },
      "description": {
        "html": "The <strong><code>submit</code></strong> event fires when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> is submitted.",
        "text": "The submit event fires when a <form> is submitted."
      }
    }
  ],
  "invalid event": [
    {
      "status": "standard",
      "type": "HTMLInputElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/invalid_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/invalid_event\">invalid event</a>",
        "text": "invalid event"
      },
      "description": {
        "html": "The <strong><code>invalid</code></strong> event fires when a submittable element has been checked for validity and doesn&apos;t satisfy its constraints.",
        "text": "The invalid event fires when a submittable element has been checked for validity and doesn't satisfy its constraints."
      }
    }
  ],
  "search event": [
    {
      "status": "standard",
      "type": "HTMLInputElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/search_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/search_event\">search event</a>",
        "text": "search event"
      },
      "description": {
        "html": "<strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
        "text": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
      }
    }
  ],
  "canplaythrough event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplaythrough_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplaythrough_event\">canplaythrough event</a>",
        "text": "canplaythrough event"
      },
      "description": {
        "html": "The <code>canplaythrough</code> event is fired when the user agent can play the media, and estimates that enough data has been loaded to play the media up to its end without having to stop for further buffering of content.",
        "text": "The canplaythrough event is fired when the user agent can play the media, and estimates that enough data has been loaded to play the media up to its end without having to stop for further buffering of content."
      }
    }
  ],
  "canplay event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplay_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplay_event\">canplay event</a>",
        "text": "canplay event"
      },
      "description": {
        "html": "The <code>canplay</code> event is fired when the user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.",
        "text": "The canplay event is fired when the user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content."
      }
    }
  ],
  "durationchange event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/durationchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/durationchange_event\">durationchange event</a>",
        "text": "durationchange event"
      },
      "description": {
        "html": "The <code>durationchange</code> event is fired when the <code>duration</code> attribute has been updated.",
        "text": "The durationchange event is fired when the duration attribute has been updated."
      }
    }
  ],
  "emptied event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/emptied_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/emptied_event\">emptied event</a>",
        "text": "emptied event"
      },
      "description": {
        "html": "The <code>emptied</code> event is fired when the media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the <code>load()</code> method is called to reload it.",
        "text": "The emptied event is fired when the media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it."
      }
    }
  ],
  "loadeddata event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event\">loadeddata event</a>",
        "text": "loadeddata event"
      },
      "description": {
        "html": "The <strong><code>loadeddata</code></strong> event is fired when the frame at the current playback position of the media has finished loading; often the first frame.",
        "text": "The loadeddata event is fired when the frame at the current playback position of the media has finished loading; often the first frame."
      }
    }
  ],
  "loadedmetadata event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadedmetadata_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadedmetadata_event\">loadedmetadata event</a>",
        "text": "loadedmetadata event"
      },
      "description": {
        "html": "The <code>loadedmetadata</code> event is fired when the metadata has been loaded.",
        "text": "The loadedmetadata event is fired when the metadata has been loaded."
      }
    }
  ],
  "pause event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/pause_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/pause_event\">pause event</a>",
        "text": "pause event"
      },
      "description": {
        "html": "The <code>pause</code> event is sent when a request to pause an activity is handled and the activity has entered its paused state, most commonly after the media has been paused through a call to the element&apos;s <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/pause\" title=\"pause()\"><code>pause()</code></a> method.",
        "text": "The pause event is sent when a request to pause an activity is handled and the activity has entered its paused state, most commonly after the media has been paused through a call to the element's pause() method."
      }
    },
    {
      "status": "standard",
      "type": "SpeechSynthesisUtterance",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/pause_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/pause_event\">pause event</a>",
        "text": "pause event"
      },
      "description": {
        "html": "The <strong><code>pause</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> object is fired when the utterance is paused part way through.",
        "text": "The pause event of the Web Speech API SpeechSynthesisUtterance object is fired when the utterance is paused part way through."
      }
    }
  ],
  "playing event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/playing_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/playing_event\">playing event</a>",
        "text": "playing event"
      },
      "description": {
        "html": "The <code>playing</code> event is fired after playback is first started, and whenever it is restarted. For example it is fired when playback resumes after having been paused or delayed due to lack of data.",
        "text": "The playing event is fired after playback is first started, and whenever it is restarted. For example it is fired when playback resumes after having been paused or delayed due to lack of data."
      }
    }
  ],
  "play event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/play_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/play_event\">play event</a>",
        "text": "play event"
      },
      "description": {
        "html": "The <code>play</code> event is fired when the <code>paused</code> property is changed from <code>true</code> to <code>false</code>, as a result of the <code>play</code> method, or the <code>autoplay</code> attribute.",
        "text": "The play event is fired when the paused property is changed from true to false, as a result of the play method, or the autoplay attribute."
      }
    }
  ],
  "ratechange event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ratechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ratechange_event\">ratechange event</a>",
        "text": "ratechange event"
      },
      "description": {
        "html": "The <code>ratechange</code> event is fired when the playback rate has changed.",
        "text": "The ratechange event is fired when the playback rate has changed."
      }
    }
  ],
  "seeked event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeked_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeked_event\">seeked event</a>",
        "text": "seeked event"
      },
      "description": {
        "html": "The <code>seeked</code> event is fired when a seek operation completed, the current playback position has changed, and the Boolean <code>seeking</code> attribute is changed to <code>false</code>.",
        "text": "The seeked event is fired when a seek operation completed, the current playback position has changed, and the Boolean seeking attribute is changed to false."
      }
    }
  ],
  "seeking event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeking_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeking_event\">seeking event</a>",
        "text": "seeking event"
      },
      "description": {
        "html": "The <code>seeking</code> event is fired when a seek operation starts, meaning the Boolean <code>seeking</code> attribute has changed to <code>true</code> and the media is seeking a new position.",
        "text": "The seeking event is fired when a seek operation starts, meaning the Boolean seeking attribute has changed to true and the media is seeking a new position."
      }
    }
  ],
  "stalled event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/stalled_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/stalled_event\">stalled event</a>",
        "text": "stalled event"
      },
      "description": {
        "html": "The <code>stalled</code> event is fired when the user agent is trying to fetch media data, but data is unexpectedly not forthcoming.",
        "text": "The stalled event is fired when the user agent is trying to fetch media data, but data is unexpectedly not forthcoming."
      }
    }
  ],
  "suspend event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/suspend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/suspend_event\">suspend event</a>",
        "text": "suspend event"
      },
      "description": {
        "html": "The <code>suspend</code> event is fired when media data loading has been suspended.",
        "text": "The suspend event is fired when media data loading has been suspended."
      }
    }
  ],
  "timeupdate event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/timeupdate_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/timeupdate_event\">timeupdate event</a>",
        "text": "timeupdate event"
      },
      "description": {
        "html": "The <code>timeupdate</code> event is fired when the time indicated by the <code>currentTime</code> attribute has been updated.",
        "text": "The timeupdate event is fired when the time indicated by the currentTime attribute has been updated."
      }
    }
  ],
  "volumechange event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/volumechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/volumechange_event\">volumechange event</a>",
        "text": "volumechange event"
      },
      "description": {
        "html": "The <code>volumechange</code> event is fired when the volume has changed.",
        "text": "The volumechange event is fired when the volume has changed."
      }
    }
  ],
  "waiting event": [
    {
      "status": "standard",
      "type": "HTMLMediaElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/waiting_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/waiting_event\">waiting event</a>",
        "text": "waiting event"
      },
      "description": {
        "html": "The <code>waiting</code> event is fired when playback has stopped because of a temporary lack of data.",
        "text": "The waiting event is fired when playback has stopped because of a temporary lack of data."
      }
    }
  ],
  "slotchange event": [
    {
      "status": "standard",
      "type": "HTMLSlotElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/slotchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/slotchange_event\">slotchange event</a>",
        "text": "slotchange event"
      },
      "description": {
        "html": "The <strong><code>slotchange</code></strong> event is fired on an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a> instance (<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot\"><code>&lt;slot&gt;</code></a> element) when the node(s) contained in that slot change.",
        "text": "The slotchange event is fired on an HTMLSlotElement instance (<slot> element) when the node(s) contained in that slot change."
      }
    }
  ],
  "cuechange event": [
    {
      "status": "standard",
      "type": "HTMLTrackElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTrackElement/cuechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTrackElement/cuechange_event\">cuechange event</a>",
        "text": "cuechange event"
      },
      "description": {
        "html": "The <strong><code>cuechange</code></strong> event fires when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\"><code>TextTrack</code></a> has changed the currently displaying cues. The event is fired on both the <code>TextTrack</code> and the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTrackElement\"><code>HTMLTrackElement</code></a> in which it&apos;s being presented, if any.",
        "text": "The cuechange event fires when a TextTrack has changed the currently displaying cues. The event is fired on both the TextTrack and the HTMLTrackElement in which it's being presented, if any."
      }
    },
    {
      "status": "standard",
      "type": "TextTrack",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/cuechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/cuechange_event\">cuechange event</a>",
        "text": "cuechange event"
      },
      "description": {
        "html": "The <strong><code>cuechange</code></strong> event fires when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\"><code>TextTrack</code></a> has changed the currently displaying cues. The event is fired on both the <code>TextTrack</code> and the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTrackElement\"><code>HTMLTrackElement</code></a> in which it&apos;s being presented, if any.",
        "text": "The cuechange event fires when a TextTrack has changed the currently displaying cues. The event is fired on both the TextTrack and the HTMLTrackElement in which it's being presented, if any."
      }
    }
  ],
  "enterpictureinpicture event": [
    {
      "status": "standard",
      "type": "HTMLVideoElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/enterpictureinpicture_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/enterpictureinpicture_event\">enterpictureinpicture event</a>",
        "text": "enterpictureinpicture event"
      },
      "description": {
        "html": "The <code>enterpictureinpicture</code> event is fired when the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a> enters picture-in-picture mode successfully.",
        "text": "The enterpictureinpicture event is fired when the HTMLVideoElement enters picture-in-picture mode successfully."
      }
    }
  ],
  "leavepictureinpicture event": [
    {
      "status": "standard",
      "type": "HTMLVideoElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/leavepictureinpicture_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement/leavepictureinpicture_event\">leavepictureinpicture event</a>",
        "text": "leavepictureinpicture event"
      },
      "description": {
        "html": "The <code>leavepictureinpicture</code> event is fired when the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a> leaves picture-in-picture mode successfully.",
        "text": "The leavepictureinpicture event is fired when the HTMLVideoElement leaves picture-in-picture mode successfully."
      }
    }
  ],
  "versionchange event": [
    {
      "status": "standard",
      "type": "IDBDatabase",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/IDBDatabase/versionchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBDatabase/versionchange_event\">versionchange event</a>",
        "text": "versionchange event"
      },
      "description": {
        "html": "\n  The <code>versionchange</code> event is fired when a database structure change (<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/upgradeneeded_event\"><code>upgradeneeded</code></a> event send on an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a> or <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBFactory/deleteDatabase\"><code>IDBFactory.deleteDatabase</code></a>) was requested elsewhere (most probably in\n  another window/tab on the same computer).\n",
        "text": "\n  The versionchange event is fired when a database structure change (upgradeneeded event send on an IDBOpenDBRequest or IDBFactory.deleteDatabase) was requested elsewhere (most probably in\n  another window/tab on the same computer).\n"
      }
    }
  ],
  "blocked event": [
    {
      "status": "standard",
      "type": "IDBOpenDBRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/blocked_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/blocked_event\">blocked event</a>",
        "text": "blocked event"
      },
      "description": {
        "html": "The <code>blocked</code> handler is executed when an open connection to a database is blocking a <code>versionchange</code> transaction on the same database.",
        "text": "The blocked handler is executed when an open connection to a database is blocking a versionchange transaction on the same database."
      }
    }
  ],
  "upgradeneeded event": [
    {
      "status": "standard",
      "type": "IDBOpenDBRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/upgradeneeded_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/upgradeneeded_event\">upgradeneeded event</a>",
        "text": "upgradeneeded event"
      },
      "description": {
        "html": "The <code>upgradeneeded</code> event is fired when an attempt was made to open a database with a version number higher than its current version.",
        "text": "The upgradeneeded event is fired when an attempt was made to open a database with a version number higher than its current version."
      }
    }
  ],
  "success event": [
    {
      "status": "standard",
      "type": "IDBRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/success_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/success_event\">success event</a>",
        "text": "success event"
      },
      "description": {
        "html": "The <code>success</code> event is fired when an <code>IDBRequest</code> succeeds.",
        "text": "The success event is fired when an IDBRequest succeeds."
      }
    }
  ],
  "complete event": [
    {
      "status": "standard",
      "type": "IDBTransaction",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/complete_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/complete_event\">complete event</a>",
        "text": "complete event"
      },
      "description": {
        "html": "The <strong><code>complete</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\">IndexedDB API</a> is fired when the transaction successfully completed.",
        "text": "The complete event of the IndexedDB API is fired when the transaction successfully completed."
      }
    },
    {
      "status": "standard",
      "type": "OfflineAudioContext",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext/complete_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext/complete_event\">complete event</a>",
        "text": "complete event"
      },
      "description": {
        "html": "The <code>complete</code> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a> interface is fired when the rendering of an offline audio context is complete.",
        "text": "The complete event of the OfflineAudioContext interface is fired when the rendering of an offline audio context is complete."
      }
    }
  ],
  "devicechange event": [
    {
      "status": "standard",
      "type": "MediaDevices",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/devicechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/devicechange_event\">devicechange event</a>",
        "text": "devicechange event"
      },
      "description": {
        "html": "A <code>devicechange</code> event is sent to a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a> instance whenever a media device such as a camera, microphone, or speaker is connected to or removed from the system.",
        "text": "A devicechange event is sent to a MediaDevices instance whenever a media device such as a camera, microphone, or speaker is connected to or removed from the system."
      }
    },
    {
      "status": "standard",
      "type": "XRSystem",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSystem/devicechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRSystem/devicechange_event\">devicechange event</a>",
        "text": "devicechange event"
      },
      "description": {
        "html": "<strong>Experimental:</strong> <strong>This is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a target=\"_blank\" href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.",
        "text": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production."
      }
    }
  ],
  "mute event": [
    {
      "status": "standard",
      "type": "MediaStreamTrack",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/mute_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/mute_event\">mute event</a>",
        "text": "mute event"
      },
      "description": {
        "html": "The <strong><code>mute</code></strong> event is sent to a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> when the track&apos;s source is temporarily unable to provide media data.",
        "text": "The mute event is sent to a MediaStreamTrack when the track's source is temporarily unable to provide media data."
      }
    }
  ],
  "unmute event": [
    {
      "status": "standard",
      "type": "MediaStreamTrack",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/unmute_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/unmute_event\">unmute event</a>",
        "text": "unmute event"
      },
      "description": {
        "html": "The <strong><code>unmute</code></strong> event is sent to a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> when the track&apos;s source is once again able to provide media data after a period of not being able to do so.",
        "text": "The unmute event is sent to a MediaStreamTrack when the track's source is once again able to provide media data after a period of not being able to do so."
      }
    }
  ],
  "merchantvalidation event": [
    {
      "status": "standard",
      "type": "PaymentRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/merchantvalidation_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/merchantvalidation_event\">merchantvalidation event</a>",
        "text": "merchantvalidation event"
      },
      "description": {
        "html": "<strong>Secure context:</strong> This feature is available only in <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a target=\"_blank\" href=\"#browser_compatibility\">supporting browsers</a>.",
        "text": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers."
      }
    }
  ],
  "paymentmethodchange event": [
    {
      "status": "standard",
      "type": "PaymentRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/paymentmethodchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/paymentmethodchange_event\">paymentmethodchange event</a>",
        "text": "paymentmethodchange event"
      },
      "description": {
        "html": "The <strong><code>paymentmethodchange</code></strong> event is delivered the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API\">Payment Request API</a> to a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest\"><code>PaymentRequest</code></a> object when the user changes the payment method within a given payment handler.",
        "text": "The paymentmethodchange event is delivered the Payment Request API to a PaymentRequest object when the user changes the payment method within a given payment handler."
      }
    }
  ],
  "shippingaddresschange event": [
    {
      "status": "standard",
      "type": "PaymentRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/shippingaddresschange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/shippingaddresschange_event\">shippingaddresschange event</a>",
        "text": "shippingaddresschange event"
      },
      "description": {
        "html": "<strong>Secure context:</strong> This feature is available only in <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a target=\"_blank\" href=\"#browser_compatibility\">supporting browsers</a>.",
        "text": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers."
      }
    }
  ],
  "shippingoptionchange event": [
    {
      "status": "standard",
      "type": "PaymentRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/shippingoptionchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/shippingoptionchange_event\">shippingoptionchange event</a>",
        "text": "shippingoptionchange event"
      },
      "description": {
        "html": "<strong>Secure context:</strong> This feature is available only in <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a target=\"_blank\" href=\"#browser_compatibility\">supporting browsers</a>.",
        "text": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers."
      }
    }
  ],
  "payerdetailchange event": [
    {
      "status": "standard",
      "type": "PaymentResponse",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/PaymentResponse/payerdetailchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/PaymentResponse/payerdetailchange_event\">payerdetailchange event</a>",
        "text": "payerdetailchange event"
      },
      "description": {
        "html": "<strong>Secure context:</strong> This feature is available only in <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a target=\"_blank\" href=\"#browser_compatibility\">supporting browsers</a>.",
        "text": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers."
      }
    }
  ],
  "resourcetimingbufferfull event": [
    {
      "status": "standard",
      "type": "Performance",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Performance/resourcetimingbufferfull_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Performance/resourcetimingbufferfull_event\">resourcetimingbufferfull event</a>",
        "text": "resourcetimingbufferfull event"
      },
      "description": {
        "html": "The <code>resourcetimingbufferfull</code> event is fired when the browser&apos;s <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Performance/setResourceTimingBufferSize\">resource timing buffer</a> is full.",
        "text": "The resourcetimingbufferfull event is fired when the browser's resource timing buffer is full."
      }
    }
  ],
  "resize event": [
    {
      "status": "standard",
      "type": "PictureInPictureWindow",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/PictureInPictureWindow/resize_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/PictureInPictureWindow/resize_event\">resize event</a>",
        "text": "resize event"
      },
      "description": {
        "html": "The <strong><code>resize</code></strong> event fires when the floating video window has been resized.",
        "text": "The resize event fires when the floating video window has been resized."
      }
    },
    {
      "status": "standard",
      "type": "VisualViewport",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/resize_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/resize_event\">resize event</a>",
        "text": "resize event"
      },
      "description": {
        "html": "The <strong><code>resize</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport\"><code>VisualViewport</code></a> interface is fired when the visual viewport is resized.",
        "text": "The resize event of the VisualViewport interface is fired when the visual viewport is resized."
      }
    },
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/resize_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/resize_event\">resize event</a>",
        "text": "resize event"
      },
      "description": {
        "html": "The <strong><code>resize</code></strong> event fires when the document view (window) has been resized.",
        "text": "The resize event fires when the document view (window) has been resized."
      }
    }
  ],
  "bufferedamountlow event": [
    {
      "status": "standard",
      "type": "RTCDataChannel",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/bufferedamountlow_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/bufferedamountlow_event\">bufferedamountlow event</a>",
        "text": "bufferedamountlow event"
      },
      "description": {
        "html": "A <strong><code>bufferedamountlow</code></strong> event is sent to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> when the number of bytes currently in the outbound data transfer buffer falls below the threshold specified in <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/bufferedAmountLowThreshold\" title=\"bufferedAmountLowThreshold\"><code>bufferedAmountLowThreshold</code></a>. <code>bufferedamountlow</code> events aren&apos;t sent if <code>bufferedAmountLowThreshold</code> is 0.",
        "text": "A bufferedamountlow event is sent to an RTCDataChannel when the number of bytes currently in the outbound data transfer buffer falls below the threshold specified in bufferedAmountLowThreshold. bufferedamountlow events aren't sent if bufferedAmountLowThreshold is 0."
      }
    }
  ],
  "closing event": [
    {
      "status": "standard",
      "type": "RTCDataChannel",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/closing_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/closing_event\">closing event</a>",
        "text": "closing event"
      },
      "description": {
        "html": "The <strong><code>closing</code></strong> event is sent to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> just before the channel begins the process of shutting down its underlying data transport.",
        "text": "The closing event is sent to an RTCDataChannel just before the channel begins the process of shutting down its underlying data transport."
      }
    }
  ],
  "tonechange event": [
    {
      "status": "standard",
      "type": "RTCDTMFSender",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/tonechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/tonechange_event\">tonechange event</a>",
        "text": "tonechange event"
      },
      "description": {
        "html": "The <strong><code>tonechange</code></strong> event is sent to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a> by the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a> to indicate when <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/DTMF\">DTMF</a> tones previously queued for sending (by calling <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/insertDTMF\"><code>RTCDTMFSender.insertDTMF()</code></a>) begin and end.",
        "text": "The tonechange event is sent to an RTCDTMFSender by the WebRTC API to indicate when DTMF tones previously queued for sending (by calling RTCDTMFSender.insertDTMF()) begin and end."
      }
    }
  ],
  "gatheringstatechange event": [
    {
      "status": "standard",
      "type": "RTCIceTransport",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/gatheringstatechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/gatheringstatechange_event\">gatheringstatechange event</a>",
        "text": "gatheringstatechange event"
      },
      "description": {
        "html": "A <strong><code>gatheringstatechange</code></strong> event is sent to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> when its <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/ICE\">ICE</a> candidate gathering state changes.",
        "text": "A gatheringstatechange event is sent to an RTCIceTransport when its ICE candidate gathering state changes."
      }
    }
  ],
  "selectedcandidatepairchange event": [
    {
      "status": "standard",
      "type": "RTCIceTransport",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/selectedcandidatepairchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/selectedcandidatepairchange_event\">selectedcandidatepairchange event</a>",
        "text": "selectedcandidatepairchange event"
      },
      "description": {
        "html": "A <strong><code>selectedcandidatepairchange</code></strong> event is sent to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> when the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/ICE\">ICE</a> agent selects a new pair of candidates that describe the endpoints of a viable connection.",
        "text": "A selectedcandidatepairchange event is sent to an RTCIceTransport when the ICE agent selects a new pair of candidates that describe the endpoints of a viable connection."
      }
    }
  ],
  "statechange event": [
    {
      "status": "standard",
      "type": "RTCIceTransport",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/statechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/statechange_event\">statechange event</a>",
        "text": "statechange event"
      },
      "description": {
        "html": "A <strong><code>statechange</code></strong> event occurs when the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> changes state. The <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/state\" title=\"state\"><code>state</code></a> can be used to determine how far through the process of examining, verifying, and selecting a valid candidate pair is prior to successfully connecting the two peers for WebRTC communications.",
        "text": "A statechange event occurs when the RTCIceTransport changes state. The state can be used to determine how far through the process of examining, verifying, and selecting a valid candidate pair is prior to successfully connecting the two peers for WebRTC communications."
      }
    }
  ],
  "addstream event": [
    {
      "status": "standard",
      "type": "RTCPeerConnection",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/addstream_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/addstream_event\">addstream event</a>",
        "text": "addstream event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "connectionstatechange event": [
    {
      "status": "standard",
      "type": "RTCPeerConnection",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/connectionstatechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/connectionstatechange_event\">connectionstatechange event</a>",
        "text": "connectionstatechange event"
      },
      "description": {
        "html": "\n  The <strong><code>connectionstatechange</code></strong> event is sent to the <code>onconnectionstatechange</code> event handler on an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> object after a new track has been added to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> which is part of the connection.\n  The new connection state can be found in <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/connectionState\" title=\"connectionState\"><code>connectionState</code></a>,\n  and is one of the string values:\n  <code>new</code>, <code>connecting</code>, <code>connected</code>, <code>disconnected</code>,\n  <code>failed</code>, or <code>closed</code>.\n",
        "text": "\n  The connectionstatechange event is sent to the onconnectionstatechange event handler on an RTCPeerConnection object after a new track has been added to an RTCRtpReceiver which is part of the connection.\n  The new connection state can be found in connectionState,\n  and is one of the string values:\n  new, connecting, connected, disconnected,\n  failed, or closed.\n"
      }
    }
  ],
  "datachannel event": [
    {
      "status": "standard",
      "type": "RTCPeerConnection",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/datachannel_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/datachannel_event\">datachannel event</a>",
        "text": "datachannel event"
      },
      "description": {
        "html": "A <strong><code>datachannel</code></strong> event is sent to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> instance when an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> has been added to the connection, as a result of the remote peer calling <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createDataChannel\"><code>RTCPeerConnection.createDataChannel()</code></a>.",
        "text": "A datachannel event is sent to an RTCPeerConnection instance when an RTCDataChannel has been added to the connection, as a result of the remote peer calling RTCPeerConnection.createDataChannel()."
      }
    }
  ],
  "icecandidateerror event": [
    {
      "status": "standard",
      "type": "RTCPeerConnection",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icecandidateerror_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icecandidateerror_event\">icecandidateerror event</a>",
        "text": "icecandidateerror event"
      },
      "description": {
        "html": "The <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a> event <strong><code>icecandidateerror</code></strong> is sent to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> if an error occurs while performing ICE negotiations through a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/STUN\">STUN</a> or <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/TURN\">TURN</a> server. The event object is of type <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a>, and contains information describing the error in some amount of detail.",
        "text": "The WebRTC API event icecandidateerror is sent to an RTCPeerConnection if an error occurs while performing ICE negotiations through a STUN or TURN server. The event object is of type RTCPeerConnectionIceErrorEvent, and contains information describing the error in some amount of detail."
      }
    }
  ],
  "icecandidate event": [
    {
      "status": "standard",
      "type": "RTCPeerConnection",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event\">icecandidate event</a>",
        "text": "icecandidate event"
      },
      "description": {
        "html": "An <strong><code>icecandidate</code></strong> event is sent to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> when an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> has been identified and added to the local peer by a call to <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription\"><code>RTCPeerConnection.setLocalDescription()</code></a>. The event handler should transmit the candidate to the remote peer over the signaling channel so the remote peer can add it to its set of remote candidates.",
        "text": "An icecandidate event is sent to an RTCPeerConnection when an RTCIceCandidate has been identified and added to the local peer by a call to RTCPeerConnection.setLocalDescription(). The event handler should transmit the candidate to the remote peer over the signaling channel so the remote peer can add it to its set of remote candidates."
      }
    }
  ],
  "iceconnectionstatechange event": [
    {
      "status": "standard",
      "type": "RTCPeerConnection",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event\">iceconnectionstatechange event</a>",
        "text": "iceconnectionstatechange event"
      },
      "description": {
        "html": "\n  An <strong><code>iceconnectionstatechange</code></strong> event is sent to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> object each time the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/ICE\">ICE</a> connection state changes during the negotiation process.\n  The new ICE connection state is available in the object&apos;s <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState\" title=\"iceConnectionState\"><code>iceConnectionState</code></a> property.\n",
        "text": "\n  An iceconnectionstatechange event is sent to an RTCPeerConnection object each time the ICE connection state changes during the negotiation process.\n  The new ICE connection state is available in the object's iceConnectionState property.\n"
      }
    }
  ],
  "icegatheringstatechange event": [
    {
      "status": "standard",
      "type": "RTCPeerConnection",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\">icegatheringstatechange event</a>",
        "text": "icegatheringstatechange event"
      },
      "description": {
        "html": "\n  The <strong><code>icegatheringstatechange</code></strong> event is sent to the <code>onicegatheringstatechange</code> event handler on an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> when the state of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/ICE\">ICE</a> candidate gathering process changes.\n  This signifies that the value of the connection&apos;s <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceGatheringState\" title=\"iceGatheringState\"><code>iceGatheringState</code></a> property has changed.\n",
        "text": "\n  The icegatheringstatechange event is sent to the onicegatheringstatechange event handler on an RTCPeerConnection when the state of the ICE candidate gathering process changes.\n  This signifies that the value of the connection's iceGatheringState property has changed.\n"
      }
    }
  ],
  "negotiationneeded event": [
    {
      "status": "standard",
      "type": "RTCPeerConnection",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event\">negotiationneeded event</a>",
        "text": "negotiationneeded event"
      },
      "description": {
        "html": "\n  A <strong><code>negotiationneeded</code></strong> event is sent to the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> when negotiation of the connection through the signaling channel is required.\n  This occurs both during the initial setup of the connection as well as any time a change to the communication environment requires reconfiguring the connection.\n",
        "text": "\n  A negotiationneeded event is sent to the RTCPeerConnection when negotiation of the connection through the signaling channel is required.\n  This occurs both during the initial setup of the connection as well as any time a change to the communication environment requires reconfiguring the connection.\n"
      }
    }
  ],
  "removestream event": [
    {
      "status": "standard",
      "type": "RTCPeerConnection",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/removestream_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/removestream_event\">removestream event</a>",
        "text": "removestream event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "signalingstatechange event": [
    {
      "status": "standard",
      "type": "RTCPeerConnection",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/signalingstatechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/signalingstatechange_event\">signalingstatechange event</a>",
        "text": "signalingstatechange event"
      },
      "description": {
        "html": "A <strong><code>signalingstatechange</code></strong> event is sent to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> to notify it that its signaling state, as indicated by the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/signalingState\" title=\"signalingState\"><code>signalingState</code></a> property, has changed.",
        "text": "A signalingstatechange event is sent to an RTCPeerConnection to notify it that its signaling state, as indicated by the signalingState property, has changed."
      }
    }
  ],
  "track event": [
    {
      "status": "standard",
      "type": "RTCPeerConnection",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/track_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/track_event\">track event</a>",
        "text": "track event"
      },
      "description": {
        "html": "The <strong><code>track</code></strong> event is sent to the <code>ontrack</code> event handler on <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>s after a new track has been added to an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> which is part of the connection.",
        "text": "The track event is sent to the ontrack event handler on RTCPeerConnections after a new track has been added to an RTCRtpReceiver which is part of the connection."
      }
    }
  ],
  "audioprocess event": [
    {
      "status": "standard",
      "type": "ScriptProcessorNode",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode/audioprocess_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode/audioprocess_event\">audioprocess event</a>",
        "text": "audioprocess event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "activate event": [
    {
      "status": "standard",
      "type": "ServiceWorkerGlobalScope",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/activate_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/activate_event\">activate event</a>",
        "text": "activate event"
      },
      "description": {
        "html": "The <strong><code>activate</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> acquires a new <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/active\"><code>ServiceWorkerRegistration.active</code></a> worker.",
        "text": "The activate event of the ServiceWorkerGlobalScope interface is fired when a ServiceWorkerRegistration acquires a new ServiceWorkerRegistration.active worker."
      }
    }
  ],
  "contentdelete event": [
    {
      "status": "standard",
      "type": "ServiceWorkerGlobalScope",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/contentdelete_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/contentdelete_event\">contentdelete event</a>",
        "text": "contentdelete event"
      },
      "description": {
        "html": "<strong>Experimental:</strong> <strong>This is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a target=\"_blank\" href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.",
        "text": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production."
      }
    }
  ],
  "install event": [
    {
      "status": "standard",
      "type": "ServiceWorkerGlobalScope",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/install_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/install_event\">install event</a>",
        "text": "install event"
      },
      "description": {
        "html": "The <strong><code>install</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface is fired when a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> acquires a new <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/installing\"><code>ServiceWorkerRegistration.installing</code></a> worker.",
        "text": "The install event of the ServiceWorkerGlobalScope interface is fired when a ServiceWorkerRegistration acquires a new ServiceWorkerRegistration.installing worker."
      }
    }
  ],
  "notificationclick event": [
    {
      "status": "standard",
      "type": "ServiceWorkerGlobalScope",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/notificationclick_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/notificationclick_event\">notificationclick event</a>",
        "text": "notificationclick event"
      },
      "description": {
        "html": "The <strong><code>notificationclick</code></strong> event is fired to indicate that a system notification spawned by <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/showNotification\"><code>ServiceWorkerRegistration.showNotification()</code></a> has been clicked.",
        "text": "The notificationclick event is fired to indicate that a system notification spawned by ServiceWorkerRegistration.showNotification() has been clicked."
      }
    }
  ],
  "pushsubscriptionchange event": [
    {
      "status": "standard",
      "type": "ServiceWorkerGlobalScope",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/pushsubscriptionchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/pushsubscriptionchange_event\">pushsubscriptionchange event</a>",
        "text": "pushsubscriptionchange event"
      },
      "description": {
        "html": "The <strong><code>pushsubscriptionchange</code></strong> event is sent to the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope\">global scope</a> of a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> to indicate a change in push subscription that was triggered outside the application&apos;s control.",
        "text": "The pushsubscriptionchange event is sent to the global scope of a ServiceWorker to indicate a change in push subscription that was triggered outside the application's control."
      }
    }
  ],
  "push event": [
    {
      "status": "standard",
      "type": "ServiceWorkerGlobalScope",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/push_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/push_event\">push event</a>",
        "text": "push event"
      },
      "description": {
        "html": "The <strong><code>push</code></strong> event is sent to a service worker&apos;s global scope (represented by the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface) when the service worker has received a push message.",
        "text": "The push event is sent to a service worker's global scope (represented by the ServiceWorkerGlobalScope interface) when the service worker has received a push message."
      }
    }
  ],
  "connect event": [
    {
      "status": "standard",
      "type": "SharedWorkerGlobalScope",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/connect_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/connect_event\">connect event</a>",
        "text": "connect event"
      },
      "description": {
        "html": "The <strong><code>connect</code></strong> event is fired in shared workers at their <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a> when a new client connects.",
        "text": "The connect event is fired in shared workers at their SharedWorkerGlobalScope when a new client connects."
      }
    }
  ],
  "audioend event": [
    {
      "status": "standard",
      "type": "SpeechRecognition",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/audioend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/audioend_event\">audioend event</a>",
        "text": "audioend event"
      },
      "description": {
        "html": "The <strong><code>audioend</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> is fired when the user agent has finished capturing audio for speech recognition.",
        "text": "The audioend event of the Web Speech API is fired when the user agent has finished capturing audio for speech recognition."
      }
    }
  ],
  "audiostart event": [
    {
      "status": "standard",
      "type": "SpeechRecognition",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/audiostart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/audiostart_event\">audiostart event</a>",
        "text": "audiostart event"
      },
      "description": {
        "html": "The <strong><code>audiostart</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> is fired when the user agent has started to capture audio for speech recognition.",
        "text": "The audiostart event of the Web Speech API is fired when the user agent has started to capture audio for speech recognition."
      }
    }
  ],
  "end event": [
    {
      "status": "standard",
      "type": "SpeechRecognition",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/end_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/end_event\">end event</a>",
        "text": "end event"
      },
      "description": {
        "html": "The <strong><code>end</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> object is fired when the speech recognition service has disconnected.",
        "text": "The end event of the Web Speech API SpeechRecognition object is fired when the speech recognition service has disconnected."
      }
    },
    {
      "status": "standard",
      "type": "SpeechSynthesisUtterance",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/end_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/end_event\">end event</a>",
        "text": "end event"
      },
      "description": {
        "html": "The <strong><code>end</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> object is fired when the utterance has finished being spoken.",
        "text": "The end event of the Web Speech API SpeechSynthesisUtterance object is fired when the utterance has finished being spoken."
      }
    },
    {
      "status": "standard",
      "type": "XRSession",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/end_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRSession/end_event\">end event</a>",
        "text": "end event"
      },
      "description": {
        "html": "<strong>Experimental:</strong> <strong>This is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a target=\"_blank\" href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.",
        "text": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production."
      }
    }
  ],
  "nomatch event": [
    {
      "status": "standard",
      "type": "SpeechRecognition",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/nomatch_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/nomatch_event\">nomatch event</a>",
        "text": "nomatch event"
      },
      "description": {
        "html": "The <strong><code>nomatch</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> is fired when the speech recognition service returns a final result with no significant recognition.",
        "text": "The nomatch event of the Web Speech API is fired when the speech recognition service returns a final result with no significant recognition."
      }
    }
  ],
  "result event": [
    {
      "status": "standard",
      "type": "SpeechRecognition",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/result_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/result_event\">result event</a>",
        "text": "result event"
      },
      "description": {
        "html": "The <strong><code>result</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> is fired when the speech recognition service returns a result &#x2014; a word or phrase has been positively recognized and this has been communicated back to the app",
        "text": "The result event of the Web Speech API is fired when the speech recognition service returns a result — a word or phrase has been positively recognized and this has been communicated back to the app"
      }
    }
  ],
  "soundend event": [
    {
      "status": "standard",
      "type": "SpeechRecognition",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/soundend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/soundend_event\">soundend event</a>",
        "text": "soundend event"
      },
      "description": {
        "html": "The <strong><code>soundend</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> is fired when any sound &#x2014; recognizable speech or not &#x2014; has stopped being detected.",
        "text": "The soundend event of the Web Speech API is fired when any sound — recognizable speech or not — has stopped being detected."
      }
    }
  ],
  "soundstart event": [
    {
      "status": "standard",
      "type": "SpeechRecognition",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/soundstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/soundstart_event\">soundstart event</a>",
        "text": "soundstart event"
      },
      "description": {
        "html": "The <strong><code>soundstart</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> is fired when any sound &#x2014; recognizable speech or not &#x2014; has been detected.",
        "text": "The soundstart event of the Web Speech API is fired when any sound — recognizable speech or not — has been detected."
      }
    }
  ],
  "speechend event": [
    {
      "status": "standard",
      "type": "SpeechRecognition",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/speechend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/speechend_event\">speechend event</a>",
        "text": "speechend event"
      },
      "description": {
        "html": "The <strong><code>speechend</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> is fired when speech recognized by the speech recognition service has stopped being detected.",
        "text": "The speechend event of the Web Speech API is fired when speech recognized by the speech recognition service has stopped being detected."
      }
    }
  ],
  "speechstart event": [
    {
      "status": "standard",
      "type": "SpeechRecognition",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/speechstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/speechstart_event\">speechstart event</a>",
        "text": "speechstart event"
      },
      "description": {
        "html": "The <strong><code>speechstart</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> is fired when sound recognized by the speech recognition service as speech has been detected.",
        "text": "The speechstart event of the Web Speech API is fired when sound recognized by the speech recognition service as speech has been detected."
      }
    }
  ],
  "start event": [
    {
      "status": "standard",
      "type": "SpeechRecognition",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/start_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/start_event\">start event</a>",
        "text": "start event"
      },
      "description": {
        "html": "The <strong><code>start</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> object is fired when the speech recognition service has begun listening to incoming audio with intent to recognize grammars associated with the current <code>SpeechRecognition</code>.",
        "text": "The start event of the Web Speech API SpeechRecognition object is fired when the speech recognition service has begun listening to incoming audio with intent to recognize grammars associated with the current SpeechRecognition."
      }
    },
    {
      "status": "standard",
      "type": "SpeechSynthesisUtterance",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/start_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/start_event\">start event</a>",
        "text": "start event"
      },
      "description": {
        "html": "The <strong><code>start</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> object is fired when the utterance has begun to be spoken.",
        "text": "The start event of the Web Speech API SpeechSynthesisUtterance object is fired when the utterance has begun to be spoken."
      }
    }
  ],
  "voiceschanged event": [
    {
      "status": "standard",
      "type": "SpeechSynthesis",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/voiceschanged_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/voiceschanged_event\">voiceschanged event</a>",
        "text": "voiceschanged event"
      },
      "description": {
        "html": "The <strong><code>voiceschanged</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> is fired when the list of <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a> objects that would be returned by the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/getVoices\"><code>SpeechSynthesis.getVoices()</code></a> method has changed (when the <code>voiceschanged</code> event fires.)",
        "text": "The voiceschanged event of the Web Speech API is fired when the list of SpeechSynthesisVoice objects that would be returned by the SpeechSynthesis.getVoices() method has changed (when the voiceschanged event fires.)"
      }
    }
  ],
  "boundary event": [
    {
      "status": "standard",
      "type": "SpeechSynthesisUtterance",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/boundary_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/boundary_event\">boundary event</a>",
        "text": "boundary event"
      },
      "description": {
        "html": "The <strong><code>boundary</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> is fired when the spoken utterance reaches a word or sentence boundary.",
        "text": "The boundary event of the Web Speech API is fired when the spoken utterance reaches a word or sentence boundary."
      }
    }
  ],
  "mark event": [
    {
      "status": "standard",
      "type": "SpeechSynthesisUtterance",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/mark_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/mark_event\">mark event</a>",
        "text": "mark event"
      },
      "description": {
        "html": "The <strong><code>mark</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> object is fired when the spoken utterance reaches a named SSML &quot;mark&quot; tag.",
        "text": "The mark event of the Web Speech API SpeechSynthesisUtterance object is fired when the spoken utterance reaches a named SSML \"mark\" tag."
      }
    }
  ],
  "resume event": [
    {
      "status": "standard",
      "type": "SpeechSynthesisUtterance",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/resume_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/resume_event\">resume event</a>",
        "text": "resume event"
      },
      "description": {
        "html": "The <strong><code>resume</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> object is fired when a paused utterance is resumed.",
        "text": "The resume event of the Web Speech API SpeechSynthesisUtterance object is fired when a paused utterance is resumed."
      }
    }
  ],
  "beginEvent event": [
    {
      "status": "standard",
      "type": "SVGAnimationElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SVGAnimationElement/beginEvent_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGAnimationElement/beginEvent_event\">beginEvent event</a>",
        "text": "beginEvent event"
      },
      "description": {
        "html": "The <strong><code>beginEvent</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGAnimationElement\"><code>SVGAnimationElement</code></a> interface is fired when the element local timeline begins to play. It will be raised each time the element begins the active duration (i.e., when it restarts, but not when it repeats).",
        "text": "The beginEvent event of the SVGAnimationElement interface is fired when the element local timeline begins to play. It will be raised each time the element begins the active duration (i.e., when it restarts, but not when it repeats)."
      }
    }
  ],
  "endEvent event": [
    {
      "status": "standard",
      "type": "SVGAnimationElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SVGAnimationElement/endEvent_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGAnimationElement/endEvent_event\">endEvent event</a>",
        "text": "endEvent event"
      },
      "description": {
        "html": "The <strong><code>endEvent</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGAnimationElement\"><code>SVGAnimationElement</code></a> interface is fired when at the active end of the animation is reached.",
        "text": "The endEvent event of the SVGAnimationElement interface is fired when at the active end of the animation is reached."
      }
    }
  ],
  "repeatEvent event": [
    {
      "status": "standard",
      "type": "SVGAnimationElement",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/SVGAnimationElement/repeatEvent_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGAnimationElement/repeatEvent_event\">repeatEvent event</a>",
        "text": "repeatEvent event"
      },
      "description": {
        "html": "The <strong><code>repeatEvent</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/SVGAnimationElement\"><code>SVGAnimationElement</code></a> interface is fired when the element&apos;s local timeline repeats. It will be fired each time the element repeats, after the first iteration.",
        "text": "The repeatEvent event of the SVGAnimationElement interface is fired when the element's local timeline repeats. It will be fired each time the element repeats, after the first iteration."
      }
    }
  ],
  "unload event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/unload_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/unload_event\">unload event</a>",
        "text": "unload event"
      },
      "description": {
        "html": "<strong>Warning:</strong> Developers should avoid using this event. See &quot;Usage notes&quot; below.",
        "text": "Warning: Developers should avoid using this event. See \"Usage notes\" below."
      }
    }
  ],
  "removeTrack event": [
    {
      "status": "standard",
      "type": "TextTrackList",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/removeTrack_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/removeTrack_event\">removeTrack event</a>",
        "text": "removeTrack event"
      },
      "description": {
        "html": "The <strong><code>removetrack</code></strong> event is fired when a track is removed from a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList\"><code>TextTrackList</code></a>.",
        "text": "The removetrack event is fired when a track is removed from a TextTrackList."
      }
    }
  ],
  "afterprint event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/afterprint_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/afterprint_event\">afterprint event</a>",
        "text": "afterprint event"
      },
      "description": {
        "html": "The <strong><code>afterprint</code></strong> event is fired after the associated document has started printing or the print preview has been closed.",
        "text": "The afterprint event is fired after the associated document has started printing or the print preview has been closed."
      }
    }
  ],
  "appinstalled event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/appinstalled_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/appinstalled_event\">appinstalled event</a>",
        "text": "appinstalled event"
      },
      "description": {
        "html": "The <strong><code>appinstalled</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/Manifest\">Web Manifest API</a> is fired when the browser has successfully installed a page as an application.",
        "text": "The appinstalled event of the Web Manifest API is fired when the browser has successfully installed a page as an application."
      }
    }
  ],
  "beforeprint event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeprint_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeprint_event\">beforeprint event</a>",
        "text": "beforeprint event"
      },
      "description": {
        "html": "The <strong><code>beforeprint</code></strong> event is fired when the associated document is about to be printed or previewed for printing.",
        "text": "The beforeprint event is fired when the associated document is about to be printed or previewed for printing."
      }
    }
  ],
  "beforeunload event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\">beforeunload event</a>",
        "text": "beforeunload event"
      },
      "description": {
        "html": "The <strong><code>beforeunload</code></strong> event is fired when the window, the document and its resources are about to be unloaded. The document is still visible and the event is still cancelable at this point.",
        "text": "The beforeunload event is fired when the window, the document and its resources are about to be unloaded. The document is still visible and the event is still cancelable at this point."
      }
    }
  ],
  "devicemotion event": [],
  "deviceorientation event": [],
  "gamepadconnected event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/gamepadconnected_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/gamepadconnected_event\">gamepadconnected event</a>",
        "text": "gamepadconnected event"
      },
      "description": {
        "html": "The <code>gamepadconnected</code> event is fired when the browser detects that a gamepad has been connected or the first time a button/axis of the gamepad is used.",
        "text": "The gamepadconnected event is fired when the browser detects that a gamepad has been connected or the first time a button/axis of the gamepad is used."
      }
    }
  ],
  "gamepaddisconnected event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/gamepaddisconnected_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/gamepaddisconnected_event\">gamepaddisconnected event</a>",
        "text": "gamepaddisconnected event"
      },
      "description": {
        "html": "The <code>gamepaddisconnected</code> event is fired when the browser detects that a gamepad has been disconnected.",
        "text": "The gamepaddisconnected event is fired when the browser detects that a gamepad has been disconnected."
      }
    }
  ],
  "hashchange event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/hashchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/hashchange_event\">hashchange event</a>",
        "text": "hashchange event"
      },
      "description": {
        "html": "The <strong><code>hashchange</code></strong> event is fired when the fragment identifier of the URL has changed (the part of the URL beginning with and following the <code>#</code> symbol).",
        "text": "The hashchange event is fired when the fragment identifier of the URL has changed (the part of the URL beginning with and following the # symbol)."
      }
    }
  ],
  "languagechange event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/languagechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/languagechange_event\">languagechange event</a>",
        "text": "languagechange event"
      },
      "description": {
        "html": "The <strong><code>languagechange</code></strong> event is fired at the global scope object when the user&apos;s preferred language changes.",
        "text": "The languagechange event is fired at the global scope object when the user's preferred language changes."
      }
    },
    {
      "status": "standard",
      "type": "WorkerGlobalScope",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/languagechange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/languagechange_event\">languagechange event</a>",
        "text": "languagechange event"
      },
      "description": {
        "html": "The <strong><code>languagechange</code></strong> event is fired at the global scope object when the user&apos;s preferred language changes.",
        "text": "The languagechange event is fired at the global scope object when the user's preferred language changes."
      }
    }
  ],
  "offline event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/offline_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/offline_event\">offline event</a>",
        "text": "offline event"
      },
      "description": {
        "html": "The <strong><code>offline</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>Window</code></a> interface is fired when the browser has lost access to the network and the value of <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/onLine\"><code>Navigator.onLine</code></a> switches to <code>false</code>.",
        "text": "The offline event of the Window interface is fired when the browser has lost access to the network and the value of Navigator.onLine switches to false."
      }
    }
  ],
  "online event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/online_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/online_event\">online event</a>",
        "text": "online event"
      },
      "description": {
        "html": "The <strong><code>online</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>Window</code></a> interface is fired when the browser has gained access to the network and the value of <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/onLine\"><code>Navigator.onLine</code></a> switches to <code>true</code>.",
        "text": "The online event of the Window interface is fired when the browser has gained access to the network and the value of Navigator.onLine switches to true."
      }
    }
  ],
  "orientationchange event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/orientationchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/orientationchange_event\">orientationchange event</a>",
        "text": "orientationchange event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "pagehide event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/pagehide_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/pagehide_event\">pagehide event</a>",
        "text": "pagehide event"
      },
      "description": {
        "html": "The <strong><code>pagehide</code></strong> event is sent to a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>Window</code></a> when the browser hides the current page in the process of presenting a different page from the session&apos;s history.",
        "text": "The pagehide event is sent to a Window when the browser hides the current page in the process of presenting a different page from the session's history."
      }
    }
  ],
  "pageshow event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/pageshow_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/pageshow_event\">pageshow event</a>",
        "text": "pageshow event"
      },
      "description": {
        "html": "The <strong><code>pageshow</code></strong> event is sent to a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>Window</code></a> when the browser displays the window&apos;s document due to navigation.",
        "text": "The pageshow event is sent to a Window when the browser displays the window's document due to navigation."
      }
    }
  ],
  "popstate event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/popstate_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/popstate_event\">popstate event</a>",
        "text": "popstate event"
      },
      "description": {
        "html": "The <strong><code>popstate</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>Window</code></a> interface is fired when the active history entry changes while the user navigates the session history. It changes the current history entry to that of the last page the user visited or, if <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\"><code>history.pushState()</code></a> has been used to add a history entry to the history stack, that history entry is used instead.",
        "text": "The popstate event of the Window interface is fired when the active history entry changes while the user navigates the session history. It changes the current history entry to that of the last page the user visited or, if history.pushState() has been used to add a history entry to the history stack, that history entry is used instead."
      }
    }
  ],
  "rejectionhandled event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/rejectionhandled_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/rejectionhandled_event\">rejectionhandled event</a>",
        "text": "rejectionhandled event"
      },
      "description": {
        "html": "The <strong><code>rejectionhandled</code></strong> event is sent to the script&apos;s global scope (usually <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>window</code></a> but also <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Worker\"><code>Worker</code></a>) whenever a rejected JavaScript <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> is handled late, i.e. when a handler is attached to the promise after its rejection had caused an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/unhandledrejection_event\" title=\"unhandledrejection\"><code>unhandledrejection</code></a> event.",
        "text": "The rejectionhandled event is sent to the script's global scope (usually window but also Worker) whenever a rejected JavaScript Promise is handled late, i.e. when a handler is attached to the promise after its rejection had caused an unhandledrejection event."
      }
    }
  ],
  "storage event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/storage_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/storage_event\">storage event</a>",
        "text": "storage event"
      },
      "description": {
        "html": "The <strong><code>storage</code></strong> event of the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>Window</code></a> interface fires when a storage area (<code>localStorage</code>) has been modified in the context of another document.",
        "text": "The storage event of the Window interface fires when a storage area (localStorage) has been modified in the context of another document."
      }
    }
  ],
  "unhandledrejection event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/unhandledrejection_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/unhandledrejection_event\">unhandledrejection event</a>",
        "text": "unhandledrejection event"
      },
      "description": {
        "html": "The <strong><code>unhandledrejection</code></strong> event is sent to the global scope of a script when a JavaScript <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that has no rejection handler is rejected; typically, this is the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\"><code>window</code></a>, but may also be a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Worker\"><code>Worker</code></a>.",
        "text": "The unhandledrejection event is sent to the global scope of a script when a JavaScript Promise that has no rejection handler is rejected; typically, this is the window, but may also be a Worker."
      }
    }
  ],
  "vrdisplayactivate event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/vrdisplayactivate_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/vrdisplayactivate_event\">vrdisplayactivate event</a>",
        "text": "vrdisplayactivate event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "vrdisplayblur event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\">vrdisplayblur event</a>",
        "text": "vrdisplayblur event"
      },
      "description": {
        "html": "The <strong><code>Window</code></strong> interface represents a window containing a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/DOM\">DOM</a> document; the <code>document</code> property points to the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document\">DOM document</a> loaded in that window.",
        "text": "The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window."
      }
    }
  ],
  "vrdisplayconnect event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/vrdisplayconnect_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/vrdisplayconnect_event\">vrdisplayconnect event</a>",
        "text": "vrdisplayconnect event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "vrdisplaydeactivate event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/vrdisplaydeactivate_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/vrdisplaydeactivate_event\">vrdisplaydeactivate event</a>",
        "text": "vrdisplaydeactivate event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "vrdisplaydisconnect event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/vrdisplaydisconnect_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/vrdisplaydisconnect_event\">vrdisplaydisconnect event</a>",
        "text": "vrdisplaydisconnect event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "vrdisplayfocus event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\">vrdisplayfocus event</a>",
        "text": "vrdisplayfocus event"
      },
      "description": {
        "html": "The <strong><code>Window</code></strong> interface represents a window containing a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/DOM\">DOM</a> document; the <code>document</code> property points to the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document\">DOM document</a> loaded in that window.",
        "text": "The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window."
      }
    }
  ],
  "vrdisplaypointerrestricted event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\">vrdisplaypointerrestricted event</a>",
        "text": "vrdisplaypointerrestricted event"
      },
      "description": {
        "html": "The <strong><code>Window</code></strong> interface represents a window containing a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/DOM\">DOM</a> document; the <code>document</code> property points to the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document\">DOM document</a> loaded in that window.",
        "text": "The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window."
      }
    }
  ],
  "vrdisplaypointerunrestricted event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\">vrdisplaypointerunrestricted event</a>",
        "text": "vrdisplaypointerunrestricted event"
      },
      "description": {
        "html": "The <strong><code>Window</code></strong> interface represents a window containing a <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/DOM\">DOM</a> document; the <code>document</code> property points to the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document\">DOM document</a> loaded in that window.",
        "text": "The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window."
      }
    }
  ],
  "vrdisplaypresentchange event": [
    {
      "status": "standard",
      "type": "Window",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/vrdisplaypresentchange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/vrdisplaypresentchange_event\">vrdisplaypresentchange event</a>",
        "text": "vrdisplaypresentchange event"
      },
      "description": {
        "html": "<strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a target=\"_blank\" href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
        "text": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time."
      }
    }
  ],
  "timeout event": [
    {
      "status": "standard",
      "type": "XMLHttpRequest",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout_event\">timeout event</a>",
        "text": "timeout event"
      },
      "description": {
        "html": "The <strong><code>timeout</code></strong> event is fired when progression is terminated due to preset time expiring.",
        "text": "The timeout event is fired when progression is terminated due to preset time expiring."
      }
    }
  ],
  "inputsourceschange event": [
    {
      "status": "standard",
      "type": "XRSession",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/inputsourceschange_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRSession/inputsourceschange_event\">inputsourceschange event</a>",
        "text": "inputsourceschange event"
      },
      "description": {
        "html": "<strong>Experimental:</strong> <strong>This is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a target=\"_blank\" href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.",
        "text": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production."
      }
    }
  ],
  "selectend event": [
    {
      "status": "standard",
      "type": "XRSession",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/selectend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRSession/selectend_event\">selectend event</a>",
        "text": "selectend event"
      },
      "description": {
        "html": "<strong>Experimental:</strong> <strong>This is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a target=\"_blank\" href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.",
        "text": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production."
      }
    }
  ],
  "selectstart event": [
    {
      "status": "standard",
      "type": "XRSession",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/selectstart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRSession/selectstart_event\">selectstart event</a>",
        "text": "selectstart event"
      },
      "description": {
        "html": "<strong>Experimental:</strong> <strong>This is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a target=\"_blank\" href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.",
        "text": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production."
      }
    }
  ],
  "squeezeend event": [
    {
      "status": "standard",
      "type": "XRSession",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/squeezeend_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRSession/squeezeend_event\">squeezeend event</a>",
        "text": "squeezeend event"
      },
      "description": {
        "html": "<strong>Experimental:</strong> <strong>This is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a target=\"_blank\" href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.",
        "text": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production."
      }
    }
  ],
  "squeezestart event": [
    {
      "status": "standard",
      "type": "XRSession",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/squeezestart_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRSession/squeezestart_event\">squeezestart event</a>",
        "text": "squeezestart event"
      },
      "description": {
        "html": "<strong>Experimental:</strong> <strong>This is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a target=\"_blank\" href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.",
        "text": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production."
      }
    }
  ],
  "squeeze event": [
    {
      "status": "standard",
      "type": "XRSession",
      "url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/squeeze_event",
      "keyword": {
        "html": "<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/XRSession/squeeze_event\">squeeze event</a>",
        "text": "squeeze event"
      },
      "description": {
        "html": "<strong>Experimental:</strong> <strong>This is an <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a target=\"_blank\" href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.",
        "text": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production."
      }
    }
  ]
}